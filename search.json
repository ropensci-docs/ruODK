[{"path":"https://docs.ropensci.org/ruODK/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behaviour participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behaviour may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"contributing guide derived tidyverse boilerplate. seems top, common sense appreciated, every contribution appreciated.","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"non-technical-contributions-to-ruodk","dir":"","previous_headings":"","what":"Non-technical contributions to ruODK","title":"Contributing","text":"Feel free report issues: Bug reports unplanned malfunctions. Feature requests ideas new features. Account requests getting access ODK Central instances run DBCA (DBCA campaigns ) CI server (contributors, run tests).","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"technical-contributions-to-ruodk","dir":"","previous_headings":"","what":"Technical contributions to ruODK","title":"Contributing","text":"like contribute code base, follow process . Prerequisites PR Process Fork, clone, branch Check Style Document Test NEWS Re-check Commit Push pull Review, revise, repeat Resources Code Conduct explains propose change ruODK via pull request using Git GitHub. general info contributing ruODK, see Resources end document.","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"Technical contributions to ruODK","what":"Prerequisites","title":"Contributing","text":"test package, need valid credentials ODK Central instance used test server. Create account request issue. pull request, always file issue make sure maintainers agree problem, happy basic proposal fixing . found bug, follow issue template create minimal reprex.","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"checklists","dir":"","previous_headings":"Technical contributions to ruODK","what":"Checklists","title":"Contributing","text":"changes intricate internal external dependencies, easy miss break. checklists aim avoid pitfalls. Test update reverse dependencies (wastdr, etlTurtleNesting, etc.).","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"adding-a-dependency","dir":"","previous_headings":"Technical contributions to ruODK > Checklists","what":"Adding a dependency","title":"Contributing","text":"Update DESCRIPTION Update GH Actions install workflows - R package deps system deps? Can GHA install environments? Update Dockerfile Update binder install.R Update installation instructions","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"renaming-a-vignette","dir":"","previous_headings":"Technical contributions to ruODK > Checklists","what":"Renaming a vignette","title":"Contributing","text":"ruODK, ODK Central “OData” modal ODK Central docs","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"adding-or-updating-a-test-form","dir":"","previous_headings":"Technical contributions to ruODK > Checklists","what":"Adding or updating a test form","title":"Contributing","text":"Update tests Update examples Update packaged data test form submissions included Add new cassette vcr cache test using test form","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"adding-or-updating-package-data","dir":"","previous_headings":"Technical contributions to ruODK > Checklists","what":"Adding or updating package data","title":"Contributing","text":"Update tests using package data Update examples Update README showing package data","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"adding-a-settings-variable","dir":"","previous_headings":"Technical contributions to ruODK > Checklists","what":"Adding a settings variable","title":"Contributing","text":"Update ru_setup, ru_settings, update add settings tests Update .Renviron Update GitHub secrets Update tic.yml (add new env vars) Update vignette “Setup”","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"fork-clone-branch","dir":"","previous_headings":"Technical contributions to ruODK > PR process","what":"Fork, clone, branch","title":"Contributing","text":"first thing ’ll need fork ruODK GitHub repo, clone locally. recommend create branch PR.","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"check","dir":"","previous_headings":"Technical contributions to ruODK > PR process","what":"Check","title":"Contributing","text":"changing anything, make sure package still passes listed flavours R CMD check locally .","code":"goodpractice::goodpractice(quiet = FALSE) devtools::check(cran = TRUE, remote = TRUE, incoming = TRUE) chk <- rcmdcheck::rcmdcheck(args = c(\"--as-cran\"))"},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"style","dir":"","previous_headings":"Technical contributions to ruODK > PR process","what":"Style","title":"Contributing","text":"Match existing code style. means follow tidyverse style guide. Use styler package apply style guide automatically. careful make style changes code contributing. find lot code doesn’t meet style guide, better file issue separate PR fix first.","code":"styler::style_pkg() lintr:::addin_lint_package() devtools::document(roclets = c(\"rd\", \"collate\", \"namespace\")) spelling::spell_check_package() spelling::spell_check_files(\"README.Rmd\", lang = \"en_AU\") spelling::update_wordlist()"},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"document","dir":"","previous_headings":"Technical contributions to ruODK > PR process","what":"Document","title":"Contributing","text":"use roxygen2, specifically Markdown syntax, create NAMESPACE .Rd files. edits documentation done roxygen comments associated function object. , run devtools::document() rebuild NAMESPACE .Rd files. See RoxygenNote DESCRIPTION version roxygen2 used.","code":"spelling::spell_check_package() spelling::spell_check_files(\"README.Rmd\", lang = \"en_AU\") spelling::update_wordlist() codemetar::write_codemeta(\"ruODK\") if (fs::file_info(\"README.md\")$modification_time <   fs::file_info(\"README.Rmd\")$modification_time) {   rmarkdown::render(\"README.Rmd\", encoding = \"UTF-8\", clean = TRUE)   if (fs::file_exists(\"README.html\")) fs::file_delete(\"README.html\") }"},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"test","dir":"","previous_headings":"Technical contributions to ruODK > PR process","what":"Test","title":"Contributing","text":"use testthat. Contributions test cases easier review verify. run tests build vignettes, ’ll need access ruODK test server. haven’t got account yet, create accont request issue request access ODK Central instance. tests require following additions .Renviron: Keep mind ruODK defaults use ODKC_{URL,UN,PW}, everyday use outside contributing, want use ODKC_{URL,UN,PW} account credentials.","code":"# ODK Test server ODKC_TEST_SVC=\"https://ruodk.getodk.cloud/v1/projects/1/forms/Flora-Quadrat-04.svc\" ODKC_TEST_URL=\"https://ruodk.getodk.cloud\" ODKC_TEST_PID=1 ODKC_TEST_PID_ENC=2 ODKC_TEST_PP=\"ThePassphrase\" ODKC_TEST_FID=\"Flora-Quadrat-04\" ODKC_TEST_FID_ZIP=\"Locations\" ODKC_TEST_FID_ATT=\"Flora-Quadrat-04-att\" ODKC_TEST_FID_GAP=\"Flora-Quadrat-04-gap\" ODKC_TEST_FID_WKT=\"Locations\" ODKC_TEST_FID_I8N0=\"I8n_no_lang\" ODKC_TEST_FID_I8N1=\"I8n_label_lng\" ODKC_TEST_FID_I8N2=\"I8n_label_choices\" ODKC_TEST_FID_ENC=\"Locations\" ODKC_TEST_VERSION=\"2023.5.1\" RU_VERBOSE=TRUE RU_TIMEZONE=\"Australia/Perth\" RU_RETRIES=3 ODKC_TEST_UN=\"...\" ODKC_TEST_PW=\"...\"  # Your ruODK default settings for everyday use ODKC_URL=\"...\" ODKC_PID=1 ODKC_FID=\"...\" ODKC_UN=\"...\" ODKC_PW=\"...\" devtools::test() devtools::test_coverage()"},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"news","dir":"","previous_headings":"Technical contributions to ruODK > PR process","what":"NEWS","title":"Contributing","text":"user-facing changes, add bullet NEWS.md concisely describes change. Small tweaks documentation need bullet. format include GitHub username, links relevant issue(s)/PR(s), seen .","code":"* `function_name()` followed by brief description of change (#issue-num, @your-github-user-name)"},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"re-check","dir":"","previous_headings":"Technical contributions to ruODK > PR process","what":"Re-check","title":"Contributing","text":"submitting changes, make sure package either still passes R CMD check, warnings /notes changed result edits.","code":"devtools::check() goodpractice::goodpractice(quiet = FALSE)"},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"commit","dir":"","previous_headings":"Technical contributions to ruODK > PR process","what":"Commit","title":"Contributing","text":"’ve made changes, write clear commit message describing ’ve done. ’ve fixed closed issue, make sure include keywords (e.g. fixes #101) end commit message (title) automatically close issue PR merged.","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"push-and-pull","dir":"","previous_headings":"Technical contributions to ruODK > PR process","what":"Push and pull","title":"Contributing","text":"’ve pushed commit(s) branch fork, ’re ready make pull request. Pull requests descriptive titles remind reviewers/maintainers PR . can easily view exact changes proposing using either Git diff view RStudio, branch comparison view ’ll taken go create new PR. PR related issue, provide issue number slug description using auto-linking syntax (e.g. #15).","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"check-the-docs","dir":"","previous_headings":"Technical contributions to ruODK > PR process","what":"Check the docs","title":"Contributing","text":"Double check output rOpenSci documentation CI breakages error messages.","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"review-revise-repeat","dir":"","previous_headings":"Technical contributions to ruODK > PR process","what":"Review, revise, repeat","title":"Contributing","text":"latency period submitting PR review may vary. maintainer review contribution, sure use conventions described revision commits.","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"resources","dir":"","previous_headings":"Technical contributions to ruODK","what":"Resources","title":"Contributing","text":"Happy Git GitHub useR Jenny Bryan. Contribute tidyverse covers several ways contribute don’t involve writing code. Contributing Code Tidyverse Jim Hester. Git GitHub Automated checking Object documentation Testing dplyr’s NEWS.md good source examples content styling. Closing issues using keywords GitHub. Autolinked references URLs GitHub. GitHub Guides: Forking Projects.","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"Technical contributions to ruODK","what":"Code of Conduct","title":"Contributing","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"maintaining-ruodk","dir":"","previous_headings":"","what":"Maintaining ruODK","title":"Contributing","text":"steps prepare new ruODK release data-raw/make_release.R. necessary run contributor, immensely convenient maintainer one place.","code":""},{"path":"https://docs.ropensci.org/ruODK/CONTRIBUTING.html","id":"package-maintenance","dir":"","previous_headings":"","what":"Package maintenance","title":"Contributing","text":"code steps run package maintainer prepare release live data-raw/make_release.R. R file, rather Markdown file like document, makes easier execute individual lines. Pushing Docker image requires privileged access Docker repository.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://docs.ropensci.org/ruODK/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2019 Florian Mayer  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. ruODK Copyright (C) 2019 Florian Mayer This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://docs.ropensci.org/ruODK/articles/comparison.html","id":"comparison-of-odk-related-software-packages-non-odk-core","dir":"Articles","previous_headings":"","what":"Comparison of ODK related software packages (non-ODK core)","title":"Comparison of related software packages","text":"summary: ruODK provides dependency-free interface ODK Central. koboloadeR metapackage containing lots ancillary packages, heavy dependencies Java ODK Briefcase (turn can access ODK Central). Although built around XlsForm standard paradigm, koboloadeR well worth exploring larger context data wrangling ODK ecosystem. Schemetrica’s tutorial illustrates data ETL ODK Central deserves special mention, recent aimed specifically ODK Central. GUI paradigm Pentaho Kettle addresses different audience scripting paradigm ruODK. mentioned Kettle’s composable data manipulation steps can used many use cases apart ODK Central.","code":""},{"path":"https://docs.ropensci.org/ruODK/articles/comparison.html","id":"comparison-of-odata-related-r-packages","dir":"Articles","previous_headings":"","what":"Comparison of OData related R packages","title":"Comparison of related software packages","text":"summary: ruODK R package explicitly aimed ODK Central’s OData RESTful API, well providing context helpers around specific recurring data wrangling tasks. value OData lies self-descriptive nature, allows tools introspect data structures types. GUI-driven tools like MS PowerBI ruODK use introspection assist users wrangling data. script-based approach ruODK allows automate data extraction, transformation, reporting pipeline, therefore provide reproducible reporting.","code":""},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"configure-ruodk","dir":"Articles","previous_headings":"","what":"Configure ruODK","title":"Accessing the OData API","text":"OData service URL shown form’s “Submissions” tab > “Analyse via OData” ODK Central. contains base URL, project ID, form ID used ruODK::ru_setup(). vignette shows access data, bonnet uses included package data. allows rebuild vignette offline without credentials originating ODK Central server. extract data OData API endpoints, : discover data endpoints OData service document, inspect metadata schema infer data types, download submissions data endpoints, download media attachments adjust file paths downloaded files.","code":"# ODK Central's OData URL contains base URL, project ID, and form ID # ODK Central credentials can live in .Renviron # See vignette(\"setup\") for setup and authentication options. ruODK::ru_setup(   svc = Sys.getenv(\"ODKC_TEST_SVC\"),   un = Sys.getenv(\"ODKC_TEST_UN\"),   pw = Sys.getenv(\"ODKC_TEST_PW\"),   tz = \"Australia/Perth\",   verbose = TRUE )  # File attachment download location loc <- fs::path(\"media\") # Canned data data(\"fq_svc\") data(\"fq_form_schema\") data(\"fq_meta\") data(\"fq_raw\") data(\"fq_raw_strata\") data(\"fq_raw_taxa\") data(\"fq_data\") data(\"fq_data_strata\") data(\"fq_data_taxa\")"},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"odata-service-document","dir":"Articles","previous_headings":"Configure ruODK","what":"OData service document","title":"Accessing the OData API","text":"Let’s start service document. data included example data fq_svc. ruODK provides names urls service endpoints tibble. see main data available url Submissions, repeating form groups called taxon_encounter vegetation_stratum ODK form url Submissions.taxon_encounter Submissions.vegetation_stratum, respectively. main value get service document names form groups, can differ forms.","code":"fq_svc <- ruODK::odata_service_get() fq_svc %>% knitr::kable(.)"},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"odata-metadata-document","dir":"Articles","previous_headings":"Configure ruODK","what":"OData metadata document","title":"Accessing the OData API","text":"Let’s inspect form metadata review data schema. can download submission data without , metadata document contains information field data types attachment names. alternative OData metadata document, ODK Central also offers form metadata much cleaner JSON document, ruODK can read parse clean tibble field type, name, path. ruODK uses introspection parse submission data.","code":"fq_meta <- ruODK::odata_metadata_get() if (requireNamespace(\"listviewer\")) {   listviewer::jsonedit(fq_meta) } else {   ru_msg_info(\"Please install package listviewer!\") } #> Loading required namespace: listviewer fq_form_schema <- ruODK::form_schema() fq_form_schema %>% knitr::kable(.)"},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"odata-submission-data-documents","dir":"Articles","previous_headings":"Configure ruODK","what":"OData submission data documents","title":"Accessing the OData API","text":"Now let’s download form submissions , separately, repeating form groups. ruODK::odata_submission_get() defaults download submission data, parse tidy tibble, parses dates datetimes, downloads links file attachments, handles spatial datatypes. vignette built canned data, verbose messages shown. wkt=TRUE, ’ll receive spatial types Well Known Text, ruODK parses plain text. wkt=FALSE (default), ’ll receive spatial types GeoJSON, ruODK parses nested list. ruODK retains original spatial field, annotates data extracted longitude, latitude, altitude, (given) accuracy. additional fields prefixed original field name prevent name collisions possibly multiple location fields.","code":"fq_data <- ruODK::odata_submission_get(   table = fq_svc$name[1],   local_dir = loc,   wkt = TRUE )  fq_data_strata <- ruODK::odata_submission_get(   table = fq_svc$name[2],   local_dir = loc )  fq_data_taxa <- ruODK::odata_submission_get(   table = fq_svc$name[3],   local_dir = loc,   wkt = TRUE )"},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"detour-data-rectangling","dir":"Articles","previous_headings":"","what":"Detour: Data rectangling","title":"Accessing the OData API","text":"function ruODK::odata_submission_get() received original XML response nested list lists. analyse visualise data, nested list lists must transformed rectangular shape. function ruODK::odata_submission_rectangle() used internally recursively un-nest list columns using tidyr::unnest_wider(). Unnamed columns, notably anonymous lat/lon/alt coordinates, named automatically become unique (feature tidyr::unnest_*()), sanitised using helper janitor::clean_names(). default, form group names used prefix field names. behaviour can disabled handing argument names_sep=NULL tidyr::unnest_wider() running ruODK::odata_submission_get() %>% ruODK::odata_submission_rectangle(names_sep = NULL). vectorised function ruODK::attachment_get() used internally download link attachments like photos media local, relative path. take time first run. files exist locally, download skipped. used ruODK::odata_submission_get(), ruODK introspect form schema detect parse media attachment fields automatically. used manually, field names media attachment fields can (partially fully) specified, see ??ruODK::attachment_get(). date formats parsed ISO8601 timestamps POSIXct objects ruODK::handle_ru_datetimes(). use local timezone (GMT+08) example. ruODK introspects form schema detect parse date datetime fields automatically. repeated subgroup taxon_encounter left joined main submission data receive (repeated) copy main submission data (location, time habitat description). repeated subgroup vegetation_stratum. clarity, enable verbose messages ruODK::odata_submission_get() preserve message output code chunk options message=TRUE. real-world use cases, messages can disabled chunk option message=FALSE. use custom local path attachments (loc). results smaller installed package size ruODK, shares attachment files vignettes. default local folder media. raw unparsed example data provided data objects fq_raw (main submissions form Flora Quadrat 0.4), fq_raw_taxa (repeated group “Taxon Encounter” within Flora Quadrat), fq_raw_strata (repeated group “Vegetation Stratum” within Flora Quadrat). parsed versions included data objects fq_data, fq_data_strata, fq_data_taxa. enable users without ODK Central credentials build vignette (e.g. package installation build_vignettes=TRUE), show real functions (ruODK::odata_submission_get()), evaluate . Instead, use “canned data”. ruODK test suite ensures canned data equivalent live data. result code chunk exactly compact version odata_submission_get(parse=TRUE). Note: manually resized version original photos example live package source articles/media. minimise package size, resized imagemagick:","code":"# Candidates for ruODK::handle_ru_datetimes() fq_form_schema %>%   dplyr::filter(type %in% c(\"dateTime\", \"date\")) %>%   knitr::kable(.) # Candidates for ruODK::handle_ru_attachments() fq_form_schema %>%   dplyr::filter(type == \"binary\") %>%   knitr::kable(.) # Candidates for ruODK::handle_ru_geopoints() fq_form_schema %>%   dplyr::filter(type == \"geopoint\") %>%   knitr::kable(.) # The raw submission data fq_raw <- ruODK::odata_submission_get(table = fq_svc$name[1], parse = FALSE) fq_strata <- ruODK::odata_submission_get(table = fq_svc$name[2], parse = FALSE) fq_taxa <- ruODK::odata_submission_get(table = fq_svc$name[3], parse = FALSE)  # Parse main data fq_data <- fq_raw %>%   ruODK::odata_submission_rectangle() %>%   ruODK::handle_ru_datetimes(fq_form_schema) %>%   ruODK::handle_ru_geopoints(fq_form_schema) %>%   ruODK::handle_ru_geotraces(fq_form_schema) %>%   ruODK::handle_ru_geoshapes(fq_form_schema) %>%   ruODK::handle_ru_attachments(fq_form_schema, local_dir = t)  # Parse nested group \"taxa\" fq_data_taxa <- fq_taxa %>%   ruODK::odata_submission_rectangle() %>%   ruODK::handle_ru_datetimes(fq_form_schema) %>%   ruODK::handle_ru_geopoints(fq_form_schema) %>%   ruODK::handle_ru_geotraces(fq_form_schema) %>%   ruODK::handle_ru_geoshapes(fq_form_schema) %>%   ruODK::handle_ru_attachments(fq_form_schema, local_dir = t) %>%   dplyr::left_join(fq_data, by = c(\"submissions_id\" = \"id\"))  # Parse nested group \"strata\" fq_data_strata <- fq_strata %>%   ruODK::odata_submission_rectangle() %>%   ruODK::handle_ru_datetimes(fq_form_schema) %>%   ruODK::handle_ru_geopoints(fq_form_schema) %>%   ruODK::handle_ru_geotraces(fq_form_schema) %>%   ruODK::handle_ru_geoshapes(fq_form_schema) %>%   ruODK::handle_ru_attachments(fq_form_schema, local_dir = t) %>%   dplyr::left_join(fq_data, by = c(\"submissions_id\" = \"id\")) find vignettes/media -type f -exec mogrify -resize 200x150 {} \\\\;"},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"diy-rectangling","dir":"Articles","previous_headings":"Detour: Data rectangling","what":"DIY rectangling","title":"Accessing the OData API","text":"wishing go one step , section demonstrates inner workings ruODK, recursive use tidyr::unnest_wider(). unnesting also done manually building pipeline, stepwise unnests list column. requires knowledge data structure, can either looked metadata, inspecting raw data, fq_raw. following command built stepwise adding tidyr::unnest_wider() expressions pipe list columns eliminated. trailing invisible() allows us toggle parts pipe catching dangling %>%.","code":"fq_data_diy <- tibble::tibble(value = fq_raw$value) %>%   tidyr::unnest_wider(value) %>%   # 1. find list columns:   tidyr::unnest_wider(`__system`) %>%   tidyr::unnest_wider(meta) %>%   # add more lines here to unnest other form groups   #   # 2. rename column names   dplyr::rename(     uuid = `__id`     # add more columns, e.g.     # longitude=`...1`, latitude=`...2`, altitude=`...3`   ) %>%   # 3. handle media attachments   # dplyr::mutate(photo_1 = attachment_get(data_url, uuid, photo_1)) %>%   invisible()"},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"visualise-data","dir":"Articles","previous_headings":"","what":"Visualise data","title":"Accessing the OData API","text":"section provides examples standard data visualisations.","code":""},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"datatable","dir":"Articles","previous_headings":"Visualise data","what":"Datatable","title":"Accessing the OData API","text":"package DT provides interactive (searchable) datatable.","code":"DT::datatable(fq_data) DT::datatable(fq_data_taxa) DT::datatable(fq_data_strata) # DT::datatable(head(fq_data_diy))"},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"map","dir":"Articles","previous_headings":"Visualise data","what":"Map","title":"Accessing the OData API","text":"R package leaflet provides interactive maps. Constructing label popup requires knowledge dataset structure.","code":"leaflet::leaflet(width = 800, height = 600) %>%   leaflet::addProviderTiles(\"OpenStreetMap.Mapnik\", group = \"Place names\") %>%   leaflet::addProviderTiles(\"Esri.WorldImagery\", group = \"Aerial\") %>%   leaflet::clearBounds() %>%   leaflet::addAwesomeMarkers(     data = fq_data,     lng = ~location_corner1_longitude,     lat = ~location_corner1_latitude,     icon = leaflet::makeAwesomeIcon(text = \"Q\", markerColor = \"red\"),     label = ~ glue::glue(\"{location_area_name} {encounter_start_datetime}\"),     popup = ~ glue::glue(       \"<h3>{location_area_name}<\/h3>\",       \"Survey start {encounter_start_datetime}<\/br>\",       \"Device {device_id}<\/br>\",       \"<h5>Site<\/h5>\",       '<div><img src=\"{location_quadrat_photo}\"',       ' height=\"150px\" alt=\"Quadrat photo\"><\/img><\/div>',       \"<h5>Mudmap<\/h5>\",       '<div><img src=\"{perimeter_mudmap_photo}',       ' height=\"150px\" alt=\"Mudmap\"><\/img><\/div>',       \"<h5>Habitat<\/h5>\",       \"Morphological type: {habitat_morphological_type}<\/br>\",       '<div><img src=\"{habitat_morphological_type_photo}\"',       'height=\"150px\" alt=\"Morphological type\"><\/img><\/div>'     ),     clusterOptions = leaflet::markerClusterOptions()   ) %>%   leaflet::addLayersControl(     baseGroups = c(\"Place names\", \"Aerial\"),     options = leaflet::layersControlOptions(collapsed = FALSE)   ) leaflet::leaflet(width = 800, height = 600) %>%   leaflet::addProviderTiles(\"OpenStreetMap.Mapnik\", group = \"Place names\") %>%   leaflet::addProviderTiles(\"Esri.WorldImagery\", group = \"Aerial\") %>%   leaflet::clearBounds() %>%   leaflet::addAwesomeMarkers(     data = fq_data_taxa,     lng = ~location_corner1_longitude,     lat = ~location_corner1_latitude,     icon = leaflet::makeAwesomeIcon(text = \"T\", markerColor = \"green\"),     label = ~ glue::glue(\"{field_name} {encounter_start_datetime}\"),     popup = ~ glue::glue(       \"<h3>{field_name}<\/h3>\",       \"Survey start {encounter_start_datetime}<\/br>\",       \"Device {device_id}<\/br>\",       \"<h5>Taxon<\/h5>\",       '<div><img src=\"media/{photo_in_situ}\"',       ' height=\"150px\" alt=\"Taxon in situ\"><\/img><\/div>',       \"Specimen barcode: {voucher_specimen_barcode}<\/br>\",       \"Life form: {life_form}<\/br>\"     ),     clusterOptions = leaflet::markerClusterOptions()   ) %>%   leaflet::addLayersControl(     baseGroups = c(\"Place names\", \"Aerial\"),     options = leaflet::layersControlOptions(collapsed = FALSE)   )"},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"summarising-data","dir":"Articles","previous_headings":"Visualise data","what":"Summarising data","title":"Accessing the OData API","text":"See Hadley Wickam’s R Data Science ideas data exploration.","code":"# How many submissions per device? fq_data %>%   dplyr::group_by(meta_instance_id) %>%   dplyr::tally() %>%   knitr::kable() # How many species sightings per life form? fq_data_taxa %>%   dplyr::group_by(life_form) %>%   dplyr::tally() %>%   knitr::kable() # GGplot of a pivot table fq_data_taxa %>%   dplyr::group_by(life_form) %>%   dplyr::tally() %>%   ggplot2::ggplot(ggplot2::aes(x = life_form, y = n)) +   ggplot2::labs(     title = \"Title\",     subtitle = \"Subtitle\",     x = \"Life form\",     y = \"Abundance\"   ) +   ggplot2::geom_point() +   ggplot2::theme_classic() # GGplot with groups fq_data_taxa %>%   ggplot2::ggplot(     ggplot2::aes(       x = encounter_start_datetime,       y = field_name,       colour = life_form,       shape = meta_instance_id     )   ) +   ggplot2::labs(     title = \"Title\",     subtitle = \"Subtitle\",     x = \"Observation date\",     y = \"Species\",     colour = \"Life form\",     shape = \"Data collection device\"   ) +   ggplot2::geom_point() +   ggplot2::theme_classic() +   ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 1))"},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"export","dir":"Articles","previous_headings":"","what":"Export","title":"Accessing the OData API","text":"rectangled data can now exported. e.g. CSV. Note list columns must either unnested dropped exporting CSV.","code":"fq_data %>% readr::write_csv(\"flora_quadrats.csv\") fq_data_tae %>% readr::write_csv(\"flora_quadrats_taxon_encounters.csv\") fq_data_veg %>% readr::write_csv(\"flora_quadrats_vegetation_strata.csv\")"},{"path":"https://docs.ropensci.org/ruODK/articles/odata-api.html","id":"ruready-to-odk","dir":"Articles","previous_headings":"","what":"ruReady to ODK?","title":"Accessing the OData API","text":"vignette, took scenic tour general workflow accessing wrangling ODK Central data using ruODK. convenience, ruODK includes template RMarkdown workbook essential steps workflow colour--numbers instructions, can used starting point projects using data ODK Central. create new RMarkdown document ruODK template, run rmarkdown::draft(\"test.Rmd\", \"odata\", package=\"ruODK\"). Users RStudio can alternatively “Create new RMarkdown document” “template” select ruODK’s template “ODK Central via OData”. Make sure install fresh version ruODK get latest greatest template.","code":""},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"scope","dir":"Articles","previous_headings":"","what":"Scope","title":"Accessing the RESTful API","text":"vignette provides guided walk-“getting data ” functions RESTful API endpoints list view details. ruODK users mix match parts demonstrated workflows build data pipelines, e.g.: build quick analysis data, freshly downloaded smaller project, build interactive ETL pipeline selectively download new submissions processing upload downstream data warehouses. typical stream-lined workflow provided RMarkdown template “ODK Central via OData” supplied ruODK.","code":""},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"three-ways-to-happiness","dir":"Articles","previous_headings":"Scope","what":"Three ways to happiness","title":"Accessing the RESTful API","text":"ODK Central offers less three different ways access data: viewing ODK Central data MS PowerBI, MS Excel, Tableau, ruODK OData service endpoints, downloading submissions including attachments one (possibly gigantic) zip archive either “Export Submissions” button ODK Central form submissions page ruODK, viewing ODK Central data ruODK’s RESTful API functions. vignette(\"odata\", package=\"ruODK\") (online ) illustrates first option, vignette demonstrates remaining two. implemented (yet) “managing ODK Central” functions create, update, delete projects, forms, users, roles, permissions. haven’t yet found strong use case automate functions - ODK Central (driven humans) jobs beautifully expected scale.","code":""},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"setup-ruodk","dir":"Articles","previous_headings":"","what":"Setup ruODK","title":"Accessing the RESTful API","text":"See vignette(\"Setup\", package = \"ruODK\") detailed options configure ruODK. , ’ll grab OData service URL form used vignette, plus username password web user ODK Central access form. ruODK::ru_setup() populate default url, project ID, form ID used ruODK’s functions (unless specified otherwise).","code":"library(ruODK) ruODK::ru_setup(   svc = \"https://sandbox.central.getodk.org/v1/projects/14/forms/build_Flora-Quadrat-0-4_1564384341.svc\",   un = Sys.getenv(\"ODKC_TEST_UN\"),   pw = Sys.getenv(\"ODKC_TEST_PW\"),   tz = \"Australia/Perth\",   verbose = TRUE ) #> <ruODK settings> #>   Default ODK Central Project ID: 14  #>   Default ODK Central Form ID: build_Flora-Quadrat-0-4_1564384341  #>   Default ODK Central URL: https://sandbox.central.getodk.org  #>   Default ODK Central Username: me@email.com  #>   Default ODK Central Password: run ruODK::get_default_pw() to show  #>   Default ODK Central Passphrase: run ruODK::get_default_pp() to show  #>   Default Time Zone: Australia/Perth  #>   Default ODK Central Version: 2023.4.0  #>   Default HTTP GET retries: 3  #>   Verbose messages: TRUE  #>   Test ODK Central Project ID: 14  #>   Test ODK Central Form ID: build_Flora-Quadrat-0-2_1558575936  #>   Test ODK Central Form ID (ZIP tests): build_Spotlighting-0-6_1558333698  #>   Test ODK Central Form ID (Attachment tests): build_Flora-Quadrat-0-1_1558330379  #>   Test ODK Central Form ID (Parsing tests): build_Turtle-Track-or-Nest-1-0_1569907666  #>   Test ODK Central Form ID (WKT tests): build_Locations_1589344221  #>   Test ODK Central URL: https://sandbox.central.getodk.org  #>   Test ODK Central Username: me@email.com  #>   Test ODK Central Password: run ruODK::get_test_pw() to show  #>   Test ODK Central Passphrase: run ruODK::get_test_pp() to show  #>   Test ODK Central Version: 2023.4.0 t <- fs::dir_create(\"media\")"},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"projects","dir":"Articles","previous_headings":"","what":"Projects","title":"Accessing the RESTful API","text":"List projects. see project ID, name, number forms app users, dates last form submissions plus project management timestamps (created, updated). important bit project ID. Inspect project using ID. receive tibble exactly one row, columns ruODK::project_list plus column verbs, contains available API actions project. Nothing apart verbs new compared data returned ruODK::project_list. learn functionality behind verbs, refer interactive ODK Central API documentation. retrieve data ODK Central, functions shown suffice.","code":"fq_project_list <- ruODK::project_list() fq_project_list %>% knitr::kable(.) fq_project_detail <- ruODK::project_detail() # Project details (without verbs) fq_project_detail %>%   dplyr::select(-\"verbs\") %>%   knitr::kable(.) # Available verbs fq_project_detail$verbs[[1]] %>% unlist(.) #>  [1] \"config.read\"              \"field_key.create\"         #>  [3] \"field_key.delete\"         \"field_key.list\"           #>  [5] \"form.create\"              \"form.delete\"              #>  [7] \"form.list\"                \"form.read\"                #>  [9] \"form.update\"              \"project.create\"           #> [11] \"project.delete\"           \"project.read\"             #> [13] \"project.update\"           \"session.end\"              #> [15] \"submission.create\"        \"submission.read\"          #> [17] \"submission.list\"          \"user.create\"              #> [19] \"user.list\"                \"user.password.invalidate\" #> [21] \"user.read\"                \"user.update\"              #> [23] \"submission.update\"        \"role.create\"              #> [25] \"role.update\"              \"role.delete\"              #> [27] \"assignment.list\"          \"assignment.create\"        #> [29] \"assignment.delete\"        \"user.delete\"              #> [31] \"audit.read\"               \"public_link.create\"       #> [33] \"public_link.list\"         \"public_link.read\"         #> [35] \"public_link.update\"       \"public_link.delete\"       #> [37] \"backup.run\"               \"config.set\"               #> [39] \"analytics.read\"           \"form.restore\"             #> [41] \"dataset.list\"             \"entity.list\"              #> [43] \"dataset.read\"             \"entity.read\"              #> [45] \"entity.create\"            \"entity.update\"            #> [47] \"dataset.update\""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"list-forms-for-a-project","dir":"Articles","previous_headings":"Forms","what":"List forms for a project","title":"Accessing the RESTful API","text":"download form submissions, need know project ID form ID. several ways retrieving form ID: Browsing forms ODK Central’s project overviews, Stealing form ID OData service endpoint URL shown ODK Central’s form submission page, Listing form metadata given project ID ruODK::form_list(). metadata shown , column xml contains entire XForms definition (originally XML) nested list. original XML needed rather R equivalent (nested list), can use ruODK::form_xml parameter parse=FALSE:","code":"fq_form_list <- ruODK::form_list() fq_form_list %>% knitr::kable(.) fq_form_xml <- ruODK::form_xml(parse = FALSE) if (require(listviewer)) {   listviewer::jsonedit(fq_form_xml) } else {   ru_msg_warn(\"Install package listviewer to browse the form XML.\") } #> Loading required package: listviewer"},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"inspect-form-schema","dir":"Articles","previous_headings":"Forms","what":"Inspect form schema","title":"Accessing the RESTful API","text":"form_schema represents form fields XForms definition. See ODK Central API docs examples ??ruODK::form_schema() detail.","code":"fq_form_schema <- ruODK::form_schema() fq_form_schema %>% knitr::kable(.)"},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"show-details-of-one-form","dir":"Articles","previous_headings":"Forms","what":"Show details of one form","title":"Accessing the RESTful API","text":"details form exactly output ruODK::form_list().","code":"fq_form_detail <- ruODK::form_detail() fq_form_detail %>% knitr::kable(.)"},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"submissions","dir":"Articles","previous_headings":"","what":"Submissions","title":"Accessing the RESTful API","text":"getting closer actual data! section shows two options data access: dump submissions, extract subset.","code":""},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"get-all-submissions-for-one-form","dir":"Articles","previous_headings":"Submissions","what":"Get all submissions for one form","title":"Accessing the RESTful API","text":"Smaller datasets lend exported one go. ODK Central offers one giant zip file containing submissions, repeating groups, attachments form submission page, API endpoint provided ruODK::submission_export(). default behaviour ruODK::submission_export() write zip file project root (::()), overwrite existing previous downloads. See ?ruODK::submission_export() alternative download retention options. following chuck, illustrate common tasks: Download zip file. Unpack zip file. Join repeating form group data data_taxon main data data_quadrat annotate data_taxon data data_quadrat. Sanitise column names. Prepend attachment filenames (e.g. data_quadrat$location_quadrat_photo, data_taxon$photo_in_situ) media/.","code":"# Predict filenames (with knowledge of form) fid <- ruODK::get_test_fid() fid_csv <- fs::path(t, glue::glue(\"{fid}.csv\")) fid_csv_veg <- fs::path(t, glue::glue(\"{fid}-vegetation_stratum.csv\")) fid_csv_tae <- fs::path(t, glue::glue(\"{fid}-taxon_encounter.csv\"))  # Download the zip file se <- ruODK::submission_export(local_dir = t, overwrite = FALSE, verbose = TRUE)  # Unpack the zip file f <- unzip(se, exdir = t) fs::dir_ls(t)  # Prepend attachments with media/ to turn into relative file paths fq_zip_data <- fid_csv %>%   readr::read_csv(na = c(\"\", \"NA\", \"na\")) %>% # form uses \"na\" for NA   janitor::clean_names(.) %>%   dplyr::mutate(id = meta_instance_id) %>%   ruODK::handle_ru_datetimes(fq_form_schema) %>%   ruODK::handle_ru_geopoints(fq_form_schema) %>%   ruODK::attachment_link(fq_form_schema)  fq_zip_strata <- fid_csv_veg %>%   readr::read_csv(na = c(\"\", \"NA\", \"na\")) %>%   janitor::clean_names(.) %>%   dplyr::mutate(id = parent_key) %>%   # ruODK::handle_ru_datetimes(fq_form_schema) parent_key%>% # no dates   # ruODK::handle_ru_geopoints(fq_form_schema) %>%  # no geopoints   # ruODK::ruODK::attachment_link(fq_form_schema) %>% # no att.   dplyr::left_join(fq_zip_data, by = c(\"parent_key\" = \"meta_instance_id\"))  fq_zip_taxa <- fid_csv_tae %>%   readr::read_csv(na = c(\"\", \"NA\", \"na\")) %>%   janitor::clean_names(.) %>%   dplyr::mutate(id = parent_key) %>%   # ruODK::handle_ru_datetimes(fq_form_schema) %>%   # ruODK::handle_ru_geopoints(fq_form_schema) %>%   # ruODK::ruODK::attachment_link(fq_form_schema) %>%   dplyr::left_join(fq_zip_data, by = c(\"parent_key\" = \"meta_instance_id\")) head(fq_zip_data) #> # A tibble: 1 × 38 #>   submission_date     meta_instance_id encounter_start_date…¹ reporter device_id #>   <dttm>              <chr>            <dttm>                 <lgl>    <chr>     #> 1 2023-12-04 08:30:26 uuid:46d3939a-8… 2023-12-04 16:20:19    NA       collect:… #> # ℹ abbreviated name: ¹​encounter_start_datetime #> # ℹ 33 more variables: location_area_name <chr>, location_quadrat_photo <chr>, #> #   location_corner1_latitude <dbl>, location_corner1_longitude <dbl>, #> #   location_corner1_altitude <dbl>, location_corner1_accuracy <dbl>, #> #   habitat_morphological_type <chr>, habitat_morphological_type_photo <chr>, #> #   perimeter_corner2_latitude <dbl>, perimeter_corner2_longitude <dbl>, #> #   perimeter_corner2_altitude <dbl>, perimeter_corner2_accuracy <dbl>, … head(fq_zip_strata) #> # A tibble: 2 × 47 #>   nvis_level3_broad_floristic_gr…¹ max_height_m foliage_cover dominant_species_1 #>   <chr>                                   <dbl> <chr>         <chr>              #> 1 w3.0_shrub                                  1 70-30         Test species 1     #> 2 w1.1_trees_rainforest                       5 10-5          Test species 5     #> # ℹ abbreviated name: ¹​nvis_level3_broad_floristic_group #> # ℹ 43 more variables: dominant_species_2 <chr>, dominant_species_3 <chr>, #> #   dominant_species_4 <chr>, parent_key <chr>, key.x <chr>, id.x <chr>, #> #   submission_date <dttm>, encounter_start_datetime <dttm>, reporter <lgl>, #> #   device_id <chr>, location_area_name <chr>, location_quadrat_photo <chr>, #> #   location_corner1_latitude <dbl>, location_corner1_longitude <dbl>, #> #   location_corner1_altitude <dbl>, location_corner1_accuracy <dbl>, … head(fq_zip_taxa) #> # A tibble: 2 × 49 #>   field_name     photo_in_situ     taxon_encounter_loca…¹ taxon_encounter_loca…² #>   <chr>          <chr>                              <dbl>                  <dbl> #> 1 Test species 1 1701678535420.jpg                  -31.9                   116. #> 2 Test species 6 1701678592627.jpg                  -31.9                   116. #> # ℹ abbreviated names: ¹​taxon_encounter_location_latitude, #> #   ²​taxon_encounter_location_longitude #> # ℹ 45 more variables: taxon_encounter_location_altitude <dbl>, #> #   taxon_encounter_location_accuracy <dbl>, life_form <chr>, #> #   voucher_specimen_barcode <lgl>, voucher_specimen_label <dbl>, #> #   parent_key <chr>, key.x <chr>, id.x <chr>, submission_date <dttm>, #> #   encounter_start_datetime <dttm>, reporter <lgl>, device_id <chr>, … # Further: create map with popups, see vignette \"odata\""},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"list-submissions-for-one-form","dir":"Articles","previous_headings":"Submissions","what":"List submissions for one form","title":"Accessing the RESTful API","text":"always appropriate download submissions attachments . forms feed downstream data warehouses, typical ETL workflow List submissions ODK Central Submissions younger oldest submission date data warehouse. Submissions whose instance_id already present data warehouse. Download selected submissions. Download attachments selected submissions. list submissions critically contains submission’s unique ID instance_id. submissions shall downloaded uploaded another data warehouse, instance_id can used determine whether record already exists downstream warehouse . workflow preferable majority submissions already imported another downstream data warehouse, want add new submissions, submissions already imported data warehouse. Furthermore, instance_ids can now used retrieve actual submissions.","code":"fq_submission_list <- ruODK::submission_list() fq_submission_list %>% knitr::kable(.)"},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"get-submission-data","dir":"Articles","previous_headings":"Submissions","what":"Get submission data","title":"Accessing the RESTful API","text":"order import submission, need retrieve data instance_id.","code":"# One submission fq_one_submission <- ruODK::get_one_submission(fq_submission_list$instance_id[[1]])  # Multiple submissions fq_submissions <- ruODK::submission_get(fq_submission_list$instance_id)"},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"parse-submissions","dir":"Articles","previous_headings":"Submissions","what":"Parse submissions","title":"Accessing the RESTful API","text":"data sub one row bulk downloaded submissions data_quadrat. data submissions represents (let’s pretend, selected) submissions data_quadrat. field xml contains actual submission data including repeating groups. structure different output ruODK::odata_submission_get, therefore ruODK::odata_submission_rectangle work , might repeating groups included submission. structure used upload data warehouses accepting nested data e.g. JSON.","code":"if (requireNamespace(\"listviewer\")) {   listviewer::jsonedit(fq_submissions, mode = \"code\") } else {   ru_msg_info(\"Please install package listviewer!\") }"},{"path":"https://docs.ropensci.org/ruODK/articles/restful-api.html","id":"outlook","dir":"Articles","previous_headings":"","what":"Outlook","title":"Accessing the RESTful API","text":"approach shown yields nested stand-alone records, useful subsequent use requires records nested JSON XML format. Complex forms repeating sub-groups result highly nested lists, whose structure heavily depends completeness submissions. approach shown vignette(\"odata-api\", package=\"ruODK\") yields rectangled data several normalised tables, useful analysis visualisation.","code":""},{"path":"https://docs.ropensci.org/ruODK/articles/setup.html","id":"configure-ruodk","dir":"Articles","previous_headings":"","what":"Configure ruODK","title":"Setup","text":"ruODK functions work given ODK Central instance using web user’s credentials (username password). functions also require project form IDs. ruODK’s functions accept parameters either explicit keyword arguments, fall back defaults. Note: Always consider code public. Never use plain text credentials code. ruODK suggests best practice set defaults (parts thereof) using ruODK::ru_setup() permanently setting environment variables.","code":""},{"path":"https://docs.ropensci.org/ruODK/articles/setup.html","id":"best-practice-ru_setup","dir":"Articles","previous_headings":"Configure ruODK","what":"Best practice: ru_setup","title":"Setup","text":"ruODK provides helpers settings, ru_setup() set ru_settings() get settings. normal users ruODK need default pid, fid, url, username, password, contributors ruODK can include optional test server settings required run test suite build vignettes. ruODK infers base URL, project form ID OData Service URL shown ODK Central Form Submissions tab. Unless specified function parameter, ruODK converts dates times default timezone, example set “Australia/Perth”. Furthermore, functions offer verbose messages, can assist debug unexpected behaviour. Unless specified settings, respective function calls, ruODK defaults hide verbose messages. Now can call ruODK functions without specifying url, un, pw, let ruODK fall back defaults:","code":"# ruODK user using OData service URL, username (an email), and password # Never use plaintext username and password, use Sys.getenv() instead ruODK::ru_setup(   svc = Sys.getenv(\"ODKC_SVC\"),   un = Sys.getenv(\"ODKC_UN\"),   pw = Sys.getenv(\"ODKC_PW\"),   tz = \"Australia/Perth\",   verbose = TRUE )  # ruODK contributors: see contributing guidelines for .Renviron variables  # Review settings ruODK::ru_settings() ruODK::project_list() ruODK::submission_list()"},{"path":"https://docs.ropensci.org/ruODK/articles/setup.html","id":"permanent-defaults-environment-variables","dir":"Articles","previous_headings":"Configure ruODK","what":"Permanent defaults: Environment variables","title":"Setup","text":"Read great overview R’s startup process, environment variables sourced beginning new session whattheyforgot.org. ruODK’s functions default getters ruODK::get_default_{pid,fid,url,un,pw}(). getters turn look values environment variables. getters setters documented “Settings” family ruODK function reference. convenient way often used environment variables available add ~/.Renviron using usethis::edit_r_environ(scope = \"user\"). loads freshly new session, eliminating need run ru_setup(). Note environment variables can cleared overwritten calling ru_setup() Sys.setenv() respective arguments. ru_setup() change omitted arguments. alternative setting environment variables ~/.Renviron, can set Sys.setenv() ruODK::ru_setup():","code":"usethis::edit_r_environ(scope = \"user\") ODKC_PID <- 1 ODKC_FID <- \"form_id\" ODKC_URL <- \"https://my-instance.getodk.cloud\" ODKC_UN <- \"me@email.com\" ODKC_PW <- \"...\" ODKC_PP <- \"...\" ODKC_VERSION <- \"2023.5.1\"  # ODK Test server ODKC_TEST_SVC <- \"https://ruodk.getodk.cloud/v1/projects/1/forms/Flora-Quadrat-04.svc\" ODKC_TEST_URL <- \"https://ruodk.getodk.cloud\" ODKC_TEST_PID <- 1 ODKC_TEST_PID_ENC <- 2 ODKC_TEST_PP <- \"ThePassphrase\" ODKC_TEST_FID <- \"Flora-Quadrat-04\" ODKC_TEST_FID_ZIP <- \"Spotlighting-06\" ODKC_TEST_FID_ATT <- \"Flora-Quadrat-04-att\" ODKC_TEST_FID_GAP <- \"Flora-Quadrat-04-gap\" ODKC_TEST_FID_WKT <- \"Locations\" ODKC_TEST_FID_I8N0 <- \"I8n_no_lang\" ODKC_TEST_FID_I8N1 <- \"I8n_label_lng\" ODKC_TEST_FID_I8N2 <- \"I8n_label_choices\" ODKC_TEST_FID_ENC <- \"Locations\" ODKC_TEST_VERSION <- \"2023.5.1\" RU_VERBOSE <- TRUE RU_TIMEZONE <- \"Australia/Perth\" RU_RETRIES <- 3 ODKC_TEST_UN <- \"...\" ODKC_TEST_PW <- \"...\" Sys.setenv(ODKC_URL = \"https://my-instance.getodk.cloud\") Sys.setenv(ODKC_UN = \"me@mail.com\") Sys.setenv(ODKC_PW = \"...\") Sys.setenv(ODKC_PP = \"...\") # add settings as needed # Reload R session to take effect  ruODK::ru_setup(   svc = \"ODK service URL contains ODKC URL, project and form IDs\",   un = \"...\",   pw = \"...\" ) # Takes effect immediately"},{"path":"https://docs.ropensci.org/ruODK/articles/setup.html","id":"the-hard-way-per-function-call","dir":"Articles","previous_headings":"Configure ruODK","what":"The hard way: Per function call","title":"Setup","text":"can supply credentials ruODK function call. Credentials can sourced environment variables (prevent hard-coding ) secure sources. example use case ruODK tests, explicitly set url, un, pw, pp, pid fid test variables ruODK::get_test_{url, un, pw, pp, pid, fid}(). Note uses functions instead plain text versions sensitive credentials. Alternatively, variables also used set credentials per function call.","code":"# Use ruODK without ru_setup ruODK::project_list(   url = Sys.getenv(\"ODKC_URL_1\"),   un = Sys.getenv(\"ODKC_UN_1\"),   pw = Sys.getenv(\"ODKC_PW_1\") )  # Use another server ruODK::project_list(   url = Sys.getenv(\"ODKC_URL_2\"),   un = Sys.getenv(\"ODKC_UN_2\"),   pw = Sys.getenv(\"ODKC_PW_2\") )  # Tests use default test settings explicitly ruODK::project_list(   url = ruODK::get_test_url(),   un = ruODK::get_test_un(),   pw = ruODK::get_test_pw() )"},{"path":"https://docs.ropensci.org/ruODK/articles/setup.html","id":"moving-across-forms","dir":"Articles","previous_headings":"Configure ruODK","what":"Moving across forms","title":"Setup","text":"ruODK’s functions default default values project ID (pid), form ID (fid), base URL (url), username (un), password (pw). typical workflow run several functions ruODK one form (overarching project). running ru_setup() form’s OData service URL web user’s username password, subsequent functions can omit pid, fid, url, un, pw.","code":"# Server 1, Project 1, Form 1 ruODK::ru_setup(   svc = \"https://central1.org/v1/projects/1/forms/form1.svc\",   un = Sys.getenv(\"ODKC_UN\"),   pw = Sys.getenv(\"ODKC_PW\") )  ruODK::project_detail() ruODK::form_detail() ruODK::submission_list()  # Server 1, Project 1, Form 3 ruODK::ru_setup(svc = \"https://central1.org/v1/projects/1/forms/form3.svc\")  ruODK::project_detail() ruODK::form_detail() ruODK::submission_list()  # Server 1, Project 5, Form 4 ruODK::ru_setup(svc = \"https://central1.org/v1/projects/5/forms/form4.svc\")  ruODK::project_detail() ruODK::form_detail() ruODK::submission_list()  # Server 2, Project 11, Form 12 ruODK::ru_setup(   svc = \"https://central2.org/v1/projects/11/forms/form12.svc\",   un = Sys.getenv(\"ODKC_UN2\"),   pw = Sys.getenv(\"ODKC_PW2\") )  ruODK::project_detail() ruODK::form_detail() ruODK::submission_list()  # Server 2, Project 11, Form 13 ruODK::ru_setup(svc = \"https://central2.org/v1/projects/11/forms/form13.svc\")  ruODK::project_detail() ruODK::form_detail() ruODK::submission_list()"},{"path":"https://docs.ropensci.org/ruODK/articles/setup.html","id":"legacy-support-for-deprecated-odk-central-features","dir":"Articles","previous_headings":"Configure ruODK","what":"Legacy support for deprecated ODK Central features","title":"Setup","text":"Users latest ODK Central version can safely ignore section. Users older ODK Central versions exposed breaking changes coming upstream ODK Central. occasionally, ODK Central deprecate API endpoints. ruODK aims keep latest ODK Central API, adapt behaviour support new old, deprecated behaviour. corresponding API endpoint determine ODK Central version, ruODK introduced environment variables ODKC_VERSION ODKC_TEST_VERSION. unset, ruODK defaults latest ODK Central version, version deployed ODK Central test server. ruODK gracefully handles current semantic versioning version format (“year.minor.patch”, e.g. “2023.5.1”) older numeric format (e.g. 0.7, 1.2). ODKC_VERSION needs repair, ruODK emit helpful warning advising correct format given version. recent example change API endpoint form_schema, replaced .schema.json API favour /fields API. required ruODK toggle behaviour relatively involved un-nesting JSON schema (versions 0.8) parsing clean, flat list field names, types, XForms paths (version 0.8 onward).","code":""},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Spatial data","text":"original data shown vignette hosted ODK Central server used ruODK package tests. form show contains every spatial widget supported ODK Build every supported spatial field type. working credentials ODK Central test server download data directly. allow users build vignette without credentials ODK Central test server, ruODK provides form data also package data.","code":"# Set ruODK defaults to an ODK Central form, choose tz and verbosity ruODK::ru_setup(   url = get_test_url(),   pid = get_test_pid(),   fid = get_test_fid_wkt(),   un = get_test_un(),   pw = get_test_pw(),   odkc_version = \"2023.5.1\",   tz = \"Australia/Perth\",   verbose = TRUE ) data_wkt <- ruODK::odata_submission_get(wkt = TRUE) data_gj <- ruODK::odata_submission_get(wkt = FALSE) data(\"geo_wkt\", package = \"ruODK\") data(\"geo_gj\", package = \"ruODK\")"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"map-geopoints","dir":"Articles","previous_headings":"","what":"Map geopoints","title":"Spatial data","text":"can turn data text column containing WKT sf (SimpleFeatures) object. addition, can leave tbl_df non-spatial object, instead use separately extracted latitude, longitude, altitude, accuracy individually e.g. plot Leaflet map.","code":"geo_sf_point <- geo_wkt %>% sf::st_as_sf(wkt = \"point_location_point_gps\") # ODK Collect captures WGS84 (EPSG:4326) sf::st_crs(geo_sf_point) <- 4326"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"mapview-using-sf","dir":"Articles","previous_headings":"Map geopoints","what":"Mapview using sf","title":"Spatial data","text":"See also information heading “Outlook”.","code":"mapview::mapview(geo_sf_point, col.regions = sf::sf.colors(10))"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"ggplot-using-sf","dir":"Articles","previous_headings":"Map geopoints","what":"GGplot using sf","title":"Spatial data","text":"","code":"ggplot2::ggplot() +   ggplot2::geom_sf(data = geo_sf_point, ggplot2::aes(fill = device_id))"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"leaflet-using-sf","dir":"Articles","previous_headings":"Map geopoints","what":"Leaflet using sf","title":"Spatial data","text":"","code":"leaflet::leaflet(data = geo_sf_point) %>%   leaflet::addTiles() %>%   leaflet::addMarkers(label = ~device_id, popup = ~device_id)"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"leaflet-using-extracted-coordinate-components-in-tbl_df","dir":"Articles","previous_headings":"Map geopoints","what":"Leaflet using extracted coordinate components in tbl_df","title":"Spatial data","text":"","code":"leaflet::leaflet(data = geo_wkt) %>%   leaflet::addTiles() %>%   leaflet::addMarkers(     lng = ~point_location_point_gps_longitude,     lat = ~point_location_point_gps_latitude,     label = ~device_id,     popup = ~device_id   )"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"map-geotraces-lines","dir":"Articles","previous_headings":"","what":"Map geotraces (lines)","title":"Spatial data","text":"use sf::st_as_sf text column containing WKT geotrace.","code":"geo_sf_line <- geo_wkt %>% sf::st_as_sf(wkt = \"path_location_path_gps\") # ODK Collect captures WGS84 (EPSG:4326) sf::st_crs(geo_sf_line) <- 4326"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"mapview-using-sf-1","dir":"Articles","previous_headings":"Map geotraces (lines)","what":"Mapview using sf","title":"Spatial data","text":"","code":"mapview::mapview(geo_sf_line, col.regions = sf::sf.colors(10))"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"ggplot-using-sf-1","dir":"Articles","previous_headings":"Map geotraces (lines)","what":"GGplot using sf","title":"Spatial data","text":"","code":"ggplot2::ggplot() +   ggplot2::geom_sf(data = geo_sf_line, ggplot2::aes(fill = device_id))"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"leaflet-using-sf-and-extracted-coordinates","dir":"Articles","previous_headings":"Map geotraces (lines)","what":"Leaflet using sf and extracted coordinates","title":"Spatial data","text":"can show either first extracted coordinate components plain tbl_df show full polygons using leafem. See mapview article extra functionality.","code":"leaflet::leaflet(data = geo_wkt) %>%   leaflet::addTiles() %>%   leaflet::addMarkers(     lng = ~path_location_path_gps_longitude,     lat = ~path_location_path_gps_latitude,     label = ~device_id,     popup = ~device_id   ) %>%   leafem::addFeatures(geo_sf_line, label = ~device_id, popup = ~device_id)"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"map-geoshapes-polygons","dir":"Articles","previous_headings":"","what":"Map geoshapes (polygons)","title":"Spatial data","text":", ’ll use sf::st_as_sf select WKT geoshape column.","code":"geo_sf_poly <- geo_wkt %>% sf::st_as_sf(wkt = \"shape_location_shape_gps\") # ODK Collect captures WGS84 (EPSG:4326) sf::st_crs(geo_sf_poly) <- 4326"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"mapview-using-sf-2","dir":"Articles","previous_headings":"Map geoshapes (polygons)","what":"Mapview using sf","title":"Spatial data","text":"","code":"mapview::mapview(geo_sf_poly, col.regions = sf::sf.colors(10))"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"ggplot-using-sf-2","dir":"Articles","previous_headings":"Map geoshapes (polygons)","what":"GGplot using sf","title":"Spatial data","text":"","code":"ggplot2::ggplot() +   ggplot2::geom_sf(data = geo_sf_poly, ggplot2::aes(fill = device_id))"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"leaflet-using-sf-and-extracted-coordinates-1","dir":"Articles","previous_headings":"Map geoshapes (polygons)","what":"Leaflet using sf and extracted coordinates","title":"Spatial data","text":"can show either first extracted coordinate components plain tbl_df show full polygons using leafem. See mapview article extra functionality.","code":"leaflet::leaflet(data = geo_wkt) %>%   leaflet::addTiles() %>%   leaflet::addMarkers(     lng = ~shape_location_shape_gps_longitude,     lat = ~shape_location_shape_gps_latitude,     label = ~device_id,     popup = ~device_id   ) %>%   leafem::addFeatures(geo_sf_poly, label = ~device_id, popup = ~device_id)"},{"path":"https://docs.ropensci.org/ruODK/articles/spatial.html","id":"outlook","dir":"Articles","previous_headings":"","what":"Outlook","title":"Spatial data","text":"examples show turn spatial data sf object, give rudimentary visualisation examples bridge gap spatial data coming ODK creating maps spatial analyses R. See sf homepage context examples. sf cheatsheet deserves spatial mention. Review options mapview popups whole mapview homepage comprehensive overview mapview. powerful visualisation package tmap supports sf objects produces printable static maps well interactive leaflet maps. See vignette “Get started”. several good entry points things R spatial, including limited : R Spatial CRAN Task View RSpatial website Geospatial data R beyond Barry Rowlingson GIS R Jesse Sadler GIS mapping Olivier Gimenez: Slides code list examples resources far comprehensive. Feel free contribute suggest working examples turning data ruODK spatial formats.","code":""},{"path":"https://docs.ropensci.org/ruODK/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Florian W. Mayer. Author, maintainer. Maëlle Salmon. Reviewer. Karissa Whiting. Reviewer. Jason Taylor. Reviewer. Marcelo Tyszler. Contributor. Hélène Langet. Contributor. . Copyright holder, funder. . Funder.","code":""},{"path":"https://docs.ropensci.org/ruODK/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mayer, Florian Wendelin. (2020, Nov 19).  ruODK: R Client ODK Central API (Version X.X.X).  Zenodo. https://doi.org/10.5281/zenodo.5559164","code":"@Misc{,   title = {ruODK: Client for the ODK Central API},   author = {Florian W. Mayer},   note = {R package version X.X.X},   year = {2020},   url = {https://github.com/ropensci/ruODK}, }"},{"path":"https://docs.ropensci.org/ruODK/index.html","id":"ruodk-an-r-client-for-the-odk-central-api-","dir":"","previous_headings":"","what":"An R Client for the ODK Central API","title":"An R Client for the ODK Central API","text":"Especially trying times, important ask “r u ODK?”. ruODK R client access parse data ODK Central. OpenDataKit (ODK) free-open-source software helps millions people collect data quickly, accurately, offline, scale. software active use every country world supported large helpful community. ruODK community contribution ODK ecosystem, directly affiliated ODK. ruODK assumes familiarity users ODK ecosystem workflows. detailed overview, read extensive ODK documentation visit friendly ODK forum. ODK Central cloud-based data clearinghouse digitally captured data, replacing older software ODK Aggregate. ODK Central manages user accounts permissions, stores form definitions, allows data collection clients like ODK Collect connect form download submission upload. ODK setup ODK Build, Central, Collect, ruODK typical ODK workflow: XForm designed e.g. ODK Build, published ODK Central, downloaded onto Android device running ODK Collect. data captured digitally using ODK Collect, data uploaded stored ODK Central. next step extract data, optionally upload another data warehouse, analyse generate insight . data can retrieved bulk GUI, ODK Central’s API provides access data functionality OData RESTful API comprehensive interactive documentation. ruODK aimed technically minded researcher wishes access process data ODK Central using programming language R. Benefits using R ecosystem combination ODK: Scalability: R ODK free open source software. Scaling many users incur license fees. Ubiquity: R known many scientists widely taught universities. Automation: entire data access analysis workflow can automated R scripts. Reproducible reporting (e.g.  Sweave, RMarkdown), interactive web apps (Shiny), workflow scaling (drake). Rstudio---Service (RaaS) ruODK’s scope: wrap ODK Central API endpoints focus data access. provide working examples interacting ODK Central API. provide convenience helpers day day tasks working ODK Central data R: data munging ODK Central API output tidy R formats. ruODK’s use cases: Data collection: ODK Collect Data clearinghouse: ODK Central Data analysis reporting: Rmd (ruODK) Publishing dissemination: ckanr, CKAN Data collection: ODK Collect Data clearinghouse: ODK Central ETL pipeline data warehouses: Rmd (ruODK) QA: data warehouse Reporting: Rmd Publishing dissemination: ckanr, CKAN scope: wrap “management” API endpoints. ODK Central VueJS/NodeJS application provides comprehensive graphical user interface management users, roles, permissions, projects, forms. provide extensive data visualisation. show minimal examples data visualisation presentation, mainly illustrate example data. data hands tidy tibbles… urODK!","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"An R Client for the ODK Central API","text":"can install latest release ruODK rOpenSci R-Universe: Alternatively, can install development version main branch. install fails, read error messages carefully install unmet dependencies (system libraries R packages). install fails building vignettes, can set build_vignettes=FALSE read vignettes online docs instead. installation still fails, make sense, feel free submit bug report.","code":"# Enable the rOpenSci universe options(repos = c(   ropensci = \"https://ropensci.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\" )) install.packages(\"ruODK\") if (!requireNamespace(\"remotes\")) install.packages(\"remotes\") # Full install remotes::install_github(   \"ropensci/ruODK@main\",   dependencies = TRUE,   upgrade = \"always\",   build_vignettes = TRUE )  # Minimal install without vignettes remotes::install_github(   \"ropensci/ruODK@main\",   dependencies = TRUE,   upgrade = \"ask\",   build_vignettes = FALSE )"},{"path":"https://docs.ropensci.org/ruODK/index.html","id":"try-ruodk","dir":"","previous_headings":"","what":"Try ruODK","title":"An R Client for the ODK Central API","text":"can also run ruODK hosted self-built Docker images. decreasing order simplicity: Launch hosted RStudio Server Launch hosted JupyterLab server (kernel options available) Download pre-built ruODK Docker image based last tagged ruODK version Build latest ruODK version locally GitHub Personal Access Token (PAT) running Docker image print URL can click . URL open JupyterLab browser. , can run available kernel, amongst others RStudio plain R shell.","code":"docker pull ghcr.io/ropensci/ruodk:latest docker run ghcr.io/ropensci/ruodk:latest git clone git@github.com:ropensci/ruODK.git cd ruODK docker build . -t <myorg>/ruodk:latest --build-arg GITHUB_PAT=\"...\" docker run -p 8888:8888 <myorg>/ruodk:latest"},{"path":"https://docs.ropensci.org/ruODK/index.html","id":"configure-ruodk","dir":"","previous_headings":"","what":"Configure ruODK","title":"An R Client for the ODK Central API","text":"available detailed options configure authentication ruODK, read vignette(\"setup\", package = \"ruODK\").","code":""},{"path":"https://docs.ropensci.org/ruODK/index.html","id":"use-ruodk","dir":"","previous_headings":"","what":"Use ruODK","title":"An R Client for the ODK Central API","text":"detailed walk-data visualisation examples available vignette(\"odata-api\", package=\"ruODK\"). See also vignette(\"restful-api\", package=\"ruODK\") examples using alternative RESTful API. urODK, sing-along ruODK workshop , R, ODK, available .","code":""},{"path":"https://docs.ropensci.org/ruODK/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"An R Client for the ODK Central API","text":"Contributions issues PRs welcome! See contributing guide best practices readings code contributions.","code":""},{"path":"https://docs.ropensci.org/ruODK/index.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"An R Client for the ODK Central API","text":"ruODK developed, maintained, Florian Mayer Western Australian Department Biodiversity, Conservation Attractions (DBCA). development funded DBCA core funding external funds North West Shelf Flatback Turtle Conservation Program. cite package ruODK publications use:","code":"citation(\"ruODK\") #> To cite ruODK in publications use (with the respective version number: #>  #>   Mayer, Florian Wendelin. (2020, Nov 19).  ruODK: An R Client for the #>   ODK Central API (Version X.X.X).  Zenodo. #>   https://doi.org/10.5281/zenodo.5559164 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Misc{, #>     title = {ruODK: Client for the ODK Central API}, #>     author = {Florian W. Mayer}, #>     note = {R package version X.X.X}, #>     year = {2020}, #>     url = {https://github.com/ropensci/ruODK}, #>   }"},{"path":"https://docs.ropensci.org/ruODK/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"An R Client for the ODK Central API","text":"Department Biodiversity, Conservation Attractions (DBCA) acknowledges traditional owners country throughout Western Australia continuing connection land, waters community. pay respects , culture Elders past present. software created Whadjuk boodja (ground) contribution ODK ecosystem conservation biodiversity Western Australia, , caring country.","code":""},{"path":"https://docs.ropensci.org/ruODK/index.html","id":"package-functionality","dir":"","previous_headings":"","what":"Package functionality","title":"An R Client for the ODK Central API","text":"See vignette(\"comparison\", package=\"ruODK\") comprehensive comparison ruODK software packages ODK OData angle.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download attachments and return the local path. — attachment_get","text":"","code":"attachment_get(   sid,   fn,   local_dir = \"media\",   separate = FALSE,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries(),   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download attachments and return the local path. — attachment_get","text":"sid One many ODK submission UUIDs, MD5 hash. fn One many ODK form attachment filenames, e.g. \"1558330537199.jpg\". local_dir local folder save downloaded files , default: \"media\". separate (logical) Whether separate locally downloaded files subfolder named submission uuid within local_dir, default: FALSE. defaults mirror behaviour submission_export, keeps attachment files together folder media. Enable option downloaded files collide idential names. can happen two data collection devices chance generate filename two respective media files, e.g. DCIM0001.jpg. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download attachments and return the local path. — attachment_get","text":"relative file path downloaded attachment(s)","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download attachments and return the local path. — attachment_get","text":"function workhorse handle_ru_attachments. function vectorised can handle either one many records. Parameters submission_uuid attachment_filename accept single exactly number multiple values. parameters automatically repeated. media attachments downloaded folder given local_dir: workdir/media/filename1.jpg workdir/media/filename2.jpg workdir/media/filename3.jpg","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download attachments and return the local path. — attachment_get","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  a_local_dir <- here::here()  # Step 2: Get unparsed submissions fresh_raw <- odata_submission_get(parse = FALSE)  # Step 3: Get attachment field \"my_photo\" fresh_parsed <- fresh_raw %>%   odata_submission_rectangle() %>%   dplyr::mutate(     my_photo = attachment_get(id,       my_photo,       local_dir = a_local_dir,       verbose = TRUE     )     # Repeat for all other attachment fields   ) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prefix attachment columns from CSV export with a local attachment file path. — attachment_link","text":"","code":"attachment_link(data_tbl, form_schema, att_path = \"media\")"},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prefix attachment columns from CSV export with a local attachment file path. — attachment_link","text":"data_tbl downloaded submissions submission_export read tibble readr::read_csv. form_schema form_schema submissions. E.g. output ruODK::form_schema(). att_path local path, default: \"media\" (per .csv.zip export). Selected columns dataframe (containing attchment filenames) prefixed att_path, thus turning relative paths.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prefix attachment columns from CSV export with a local attachment file path. — attachment_link","text":"dataframe attachment columns modified contain relative paths downloaded attachment files.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prefix attachment columns from CSV export with a local attachment file path. — attachment_link","text":"","code":"if (FALSE) { t <- tempdir() # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  # Predict filenames (with knowledge of form) fid <- get_default_fid() fid_csv <- fs::path(t, glue::glue(\"{fid}.csv\")) fid_csv_tae <- fs::path(t, glue::glue(\"{fid}-taxon_encounter.csv\")) fs <- form_schema()  # Download the zip file se <- ruODK::submission_export(   local_dir = t,   overwrite = FALSE,   verbose = TRUE )  # Unpack the zip file f <- unzip(se, exdir = t) fs::dir_ls(t)  # Prepend attachments with media/ to turn into relative file paths data_quadrat <- fid_csv %>%   readr::read_csv(na = c(\"\", \"NA\", \"na\")) %>%   janitor::clean_names() %>%   handle_ru_datetimes(fs) %>%   attachment_link(fs) }"},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List all attachments for a list of submission instances. — attachment_list","title":"List all attachments for a list of submission instances. — attachment_list","text":"List attachments list submission instances.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all attachments for a list of submission instances. — attachment_list","text":"","code":"attachment_list(   iid,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all attachments for a list of submission instances. — attachment_list","text":"iid list submission instance IDs, e.g. submission_list$instance_id. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all attachments for a list of submission instances. — attachment_list","text":"tibble containing high-level details submission attachments. One row per submission attachment, columns submission attributes:","code":"* name: The attachment filename, e.g. 12345.jpg     * exists: Whether the attachment for that submission exists on the       server."},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all attachments for a list of submission instances. — attachment_list","text":"","code":"if (FALSE) { # Step 1: Setup ruODK with OData Service URL (has url, pid, fid) ruODK::ru_setup(svc = \"...\")  # Step 2: List all submissions of form sl <- submission_list()  # Step 3a: Get attachment list for first submission al <- get_one_submission_attachment_list(sl$instance_id[[1]])  # Ste 3b: Get all attachments for all submissions all <- attachment_list(sl$instance_id) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build the download URL for one or many submission UUIDs and filenames. — attachment_url","text":"","code":"attachment_url(   uuid,   fn,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url() )"},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build the download URL for one or many submission UUIDs and filenames. — attachment_url","text":"uuid UUID one form submission, vector UUIDs. fn attachment filename, per ODK form submission, vector attachment filenames. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\").","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build the download URL for one or many submission UUIDs and filenames. — attachment_url","text":"inferred download URL.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_url.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build the download URL for one or many submission UUIDs and filenames. — attachment_url","text":"helper function used attachment_get. function vectorised accepts single values vectors uuid fn.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/attachment_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build the download URL for one or many submission UUIDs and filenames. — attachment_url","text":"","code":"# See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  ruODK:::attachment_url(   \"uuid:d3bcefea\",   \"filename.jpg\",   pid = 1,   fid = \"form1\",   url = \"https://my.odkcentral.org\" ) #> https://my.odkcentral.org/v1/projects/1/forms/form1/submissions/uuid:d3bcefea/attachments/filename.jpg"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/audit_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get server audit log entries. — audit_get","text":"","code":"audit_get(   action = NULL,   start = NULL,   end = NULL,   limit = NULL,   offset = NULL,   url = Sys.getenv(\"ODKC_URL\"),   un = Sys.getenv(\"ODKC_UN\"),   pw = Sys.getenv(\"ODKC_PW\"),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/audit_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get server audit log entries. — audit_get","text":"action string. action filter logs, e.g. \"user.create\". See https://docs.getodk.org/central-api-system-endpoints/#getting-audit-log-entries full list available actions. start string. ISO8601 timestamp earliest log entry return. E.g. 2000-01-01z 2000-12-31T23:59.999z, 2000-01-01T12:12:12+08 2000-01-01+08. end string. ISO8601 timestamp last log entry return. limit integer. max number log entries return. offset integer. number log entries skip. url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/audit_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get server audit log entries. — audit_get","text":"tibble containing server audit logs. One row per audited action, columns submission attributes: actor_id: integer. ID actor, , initiated action. action: string. action taken. actee_id: uuid, string. ID permissioning object action taken. details: list. Additional details action vary according type action. logged_at: dttm. Time action server.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/audit_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get server audit log entries. — audit_get","text":"Parameters filter audit logs: action=form.create&start=2000-01-01z&end=2000-12-31T23%3A59.999z","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/audit_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get server audit log entries. — audit_get","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  logs <- audit_get()  # With search parameters logs <- audit_get(   action = \"project.update\",   start = \"2019-08-01Z\",   end = \"2019-08-31Z\",   limit = 100,   offset = 0 )  # With partial search parameters logs <- audit_get(   limit = 100,   offset = 0 )  logs %>% knitr::kable(.)  # audit_get returns a tibble class(logs) # > c(\"tbl_df\", \"tbl\", \"data.frame\")  # Audit details names(logs) # > \"actor_id\" \"action\" \"actee_id\" \"details\" \"logged_at\" }"},{"path":"https://docs.ropensci.org/ruODK/reference/drop_null_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop any NULL coordinates from a GeoJSON geometry. — drop_null_coords","title":"Drop any NULL coordinates from a GeoJSON geometry. — drop_null_coords","text":"helper patches bug/feature ODK Central (versions 0.7-0.9), geotrace / geoshape GeoJSON contains last coordinate pair NULL lat/lon (alt/acc), WKT ends , undefined NaN.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/drop_null_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop any NULL coordinates from a GeoJSON geometry. — drop_null_coords","text":"","code":"drop_null_coords(x)"},{"path":"https://docs.ropensci.org/ruODK/reference/drop_null_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop any NULL coordinates from a GeoJSON geometry. — drop_null_coords","text":"x GeoJSON geometry parsed nested list. E.g. geo_gj$path_location_path_gps.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/drop_null_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop any NULL coordinates from a GeoJSON geometry. — drop_null_coords","text":"nested list minus last element (NULL).","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/drop_null_coords.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drop any NULL coordinates from a GeoJSON geometry. — drop_null_coords","text":"split_geotrace split_geoshape modify WKT inline, maintainable separate GeoJSON cleaner function. helper drops last element GeoJSON coordinate list list(NULL, NULL).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/drop_null_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop any NULL coordinates from a GeoJSON geometry. — drop_null_coords","text":"","code":"# A snapshot of geo data with trailing empty coordinates. data(\"geo_gj88\")  len_coords <- length(geo_gj88$path_location_path_gps[[1]]$coordinates)  length(geo_gj88$path_location_path_gps[[1]]$coordinates[[len_coords]]) %>%   testthat::expect_equal(2)  geo_gj88$path_location_path_gps[[1]]$coordinates[[len_coords]][[1]] %>%   testthat::expect_null()  geo_gj88$path_location_path_gps[[1]]$coordinates[[len_coords]][[2]] %>%   testthat::expect_null()  # The last coordinate pair is a list(NULL, NULL). # Invalid coordinates like these are a choking hazard for geospatial # packages. We should remove them before we can convert ODK data into native # spatial formats, such as sf. str(geo_gj88$path_location_path_gps[[1]]$coordinates[[len_coords]]) #> List of 2 #>  $ : NULL #>  $ : NULL  geo_gj_repaired <- geo_gj88 %>%   dplyr::mutate(     path_location_path_gps = path_location_path_gps %>%       purrr::map(drop_null_coords)   )  len_coords_repaired <- length(   geo_gj_repaired$path_location_path_gps[[1]]$coordinates ) testthat::expect_equal(len_coords_repaired + 1, len_coords)"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/encryption_key_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all encryption keys for a form. — encryption_key_list","text":"","code":"encryption_key_list(   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries(),   orders = c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"),   tz = get_default_tz() )"},{"path":"https://docs.ropensci.org/ruODK/reference/encryption_key_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all encryption keys for a form. — encryption_key_list","text":"pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. orders (vector character) Orders datetime elements lubridate. Default: c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"). tz timezone convert dates times . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's timezone can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/encryption_key_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all encryption keys for a form. — encryption_key_list","text":"tibble encryption keys.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/encryption_key_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List all encryption keys for a form. — encryption_key_list","text":"endpoint provides listing known encryption keys needed decrypt Submissions given Form. return least base64RsaPublicKey property (column public) known versions form submissions . managed keys used hint provided, returned well.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/encryption_key_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all encryption keys for a form. — encryption_key_list","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  x <- encryption_key_list(   pid = Sys.getenv(\"ODKC_TEST_PID_ENC\"),   fid = Sys.getenv(\"ODKC_TEST_FID_ENC\"),   url = get_test_url(),   un = get_test_un(),   pw = get_test_pw() )  names(x) # > [1] \"id\" \"public\" \"managed\" \"hint\" \"created_at\" }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_detail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show details for one form. — form_detail","text":"","code":"form_detail(   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/form_detail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show details for one form. — form_detail","text":"pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/form_detail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show details for one form. — form_detail","text":"tibble one row form metadata columns.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_detail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show details for one form. — form_detail","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  # With explicit credentials, see tests fl <- form_list()  # The first form in the test project f <- form_detail(fid = fl$fid[[1]])  # form_detail returns exactly one row nrow(f) # > 1  # form_detail returns all form metadata as columns: name, xmlFormId, etc. names(f)  # > \"name\" \"fid\" \"version\" \"state\" \"submissions\" \"created_at\" # > \"created_by_id\" \"created_by\" \"updated_at\" \"published_at\" # > \"last_submission\" \"hash\" }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all forms. — form_list","text":"","code":"form_list(   pid = get_default_pid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries(),   orders = c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"),   tz = get_default_tz() )"},{"path":"https://docs.ropensci.org/ruODK/reference/form_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all forms. — form_list","text":"pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. orders (vector character) Orders datetime elements lubridate. Default: c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"). tz timezone convert dates times . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's timezone can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/form_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all forms. — form_list","text":"tibble one row per form given form metadata cols. Column names sanitized snake_case. Nested columns (review start created ) flattened prefixed. column xml_form_id replicated fid according ruODK naming standards.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all forms. — form_list","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  # With default pid fl <- form_list()  # With explicit pid fl <- form_list(pid = 1)  class(fl) # > c(\"tbl_df\", \"tbl\", \"data.frame\")  # Filter out draft forms (published_at=NA) only_published_forms <- fl %>% dplyr::filter(is.na(published_at))  # Note: older ODK Central versions < 1.1 have published_at = NA for both # published and draft forms. Drafts have NA for version and hash. only_published_forms <- fl %>% dplyr::filter(is.na(version) & is.na(hash)) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the schema of one form. — form_schema","text":"","code":"form_schema(   flatten = FALSE,   odata = FALSE,   parse = TRUE,   draft = FALSE,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   odkc_version = get_default_odkc_version(),   retries = get_retries(),   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the schema of one form. — form_schema","text":"flatten Whether flatten resulting list lists (TRUE) (FALSE, default). applies ODK Central version < 0.8. odata Whether sanitise field names match way outputted OData. original field names given XForms definition may used -CSV output, OData restrictions related domain-qualified identifier syntax uses. applies ODK Central version < 0.8. Default: FALSE. parse Whether parse form schema tibble form field type name. uses form_schema_parse internally. used together flatten=TRUE, form_schema raise warning return unparsed, flattened form schema. applies ODK Central version < 0.8. Default: TRUE. draft Whether form published (FALSE) draft (TRUE). Default: TRUE. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). odkc_version ODK Central version semantic version string (year.minor.patch), e.g. \"2023.5.1\". version shown ODK Central's version page /version.txt. Discard \"v\". ruODK uses parameter adjust breaking changes ODK Central. Default: get_default_odkc_version \"2023.5.1\" unset. Set default get_default_odkc_version ru_setup(odkc_version=\"2023.5.1\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the schema of one form. — form_schema","text":"tibble nested list (v0.7) containing form definition. lowest nesting level, form field consists list two nodes, name (underlying field name) type (XForms field type, \"string\", \"select1\", \"geopoint\", \"binary\" ). fields nested lists tuples name (XForms screen name), children (fields described ), type (\"structure\" non- repeating screens, \"repeat\" repeating screens). list name \"meta\" may precede structure, several metadata fields captured (e.g. \"instanceId\", form start datetimes etc.). cases ODK Central 0.8, default parameters (parse=TRUE) ODK Central 0.7, form_schema returns tibble columns: name field name given form schema. type field type, e.g. \"string\", \"select1\", etc. path XForms path field, selectMultiple Whether field type \"select\" select multiple (TRUE). types NA. ruodk_name predicted field name generated odata_submission_get, prefixed path, additionally cleaned make_clean_names match cleaned column names odata_submission_rectangle.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show the schema of one form. — form_schema","text":"ODK Central introduced new API endpoint version 0.8 returns parsed flattened list fields. replaces nested form schema challenging parse. users newer ODK Central versions (> 0.8) can ignore legacy support ODK Central's earlier form schema API, users ODK Central version < 0.8 can set environment variable ODKC_VERSION ODKC's version format <major>.<minor> e.g. 0.7. variable caters future breaking changes. Either way, form_schema always return tibble columns name, type, path ruodk_name.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the schema of one form. — form_schema","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  # With explicit pid and fid fs_defaults <- form_schema(pid = 1, fid = \"build_xformsId\")  # With current ODK Central (v0.8) fs <- form_schema()  # With defaults, ODK Central v0.7 fs_nested <- form_schema(   flatten = FALSE,   odata = FALSE,   parse = FALSE,   odkc_version = 0.7 ) listviewer::jsonedit(fs_nested)  fs_flattened <- form_schema(   flatten = TRUE,   odata = FALSE,   parse = FALSE,   odkc_version = 0.7 ) listviewer::jsonedit(fs_flattened)  # form_schema returns a nested list. There's nothing to change about that. class(fs_nested) # > \"list\"  class(fs_flattened) # > \"list\"  # This assumes knowledge of that exact form being tested. # First node: type \"structure\" (a field group) named \"meta\". fs_nested[[1]]$type # > \"structure\"  fs_nested[[1]]$name # > \"meta\"  # The first node contains children, which means it's an XForms field group. names(fs_nested[[1]]) # > \"name\" \"children\" \"type\"  # Next node: a \"meta\" field of type \"string\" capturing the  \"instanceId\". # First child node of \"meta\": type \"string\", name \"instanceId\". fs_nested[[1]]$children[[1]]$type # > \"string\" fs_nested[[1]]$children[[1]]$name # > \"instanceID\"  # In the flattened version, the field's and it's ancestors' names are the # components of \"path\". fs_flattened[[1]]$path # > \"meta\". \"instanceId\"  fs_flattened[[1]]$type # > \"string\"  # Last node: a \"meta\" field capturing the datetime of form completion fs_flattened[[length(fs_flattened)]]$type # > \"dateTime\" fs_nested[[length(fs_nested)]]$type # > \"dateTime\"  # Parsed into a tibble of form field type/name: # Useful to inform further parsing of submission data (attachments, dates) fs <- form_schema(parse = TRUE, odkc_version = 0.7) fs <- form_schema(odkc_version = 0.8)  # Attachments: used by handle_ru_attachments fs %>% dplyr::filter(type == \"binary\")  # dateTime: used by handle_ru_datetimes fs %>% dplyr::filter(type == \"dateTime\")  # Point location: used by handle_ru_geopoints fs %>% dplyr::filter(type == \"geopoint\") }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the extended schema of one form. — form_schema_ext","text":"","code":"form_schema_ext(   flatten = FALSE,   odata = FALSE,   parse = TRUE,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   odkc_version = get_default_odkc_version(),   retries = get_retries(),   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the extended schema of one form. — form_schema_ext","text":"flatten Whether flatten resulting list lists (TRUE) (FALSE, default). applies ODK Central version < 0.8. odata Whether sanitise field names match way outputted OData. original field names given XForms definition may used -CSV output, OData restrictions related domain-qualified identifier syntax uses. applies ODK Central version < 0.8. Default: FALSE. parse Whether parse form schema tibble form field type name. uses form_schema_parse internally. used together flatten=TRUE, form_schema raise warning return unparsed, flattened form schema. applies ODK Central version < 0.8. Default: TRUE. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). odkc_version ODK Central version semantic version string (year.minor.patch), e.g. \"2023.5.1\". version shown ODK Central's version page /version.txt. Discard \"v\". ruODK uses parameter adjust breaking changes ODK Central. Default: get_default_odkc_version \"2023.5.1\" unset. Set default get_default_odkc_version ru_setup(odkc_version=\"2023.5.1\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the extended schema of one form. — form_schema_ext","text":"tibble containing form definition. ODK Central 0.8, default parameters (parse=TRUE) ODK Central 0.7, form_schema returns tibble columns: name field name given form schema. type field type, e.g. \"string\", \"select1\", etc. path XForms path field, ruodk_name predicted field name generated odata_submission_get, prefixed path, additionally cleaned make_clean_names match cleaned column names odata_submission_rectangle. label field label given form schema. specific languages available, column return default language empty specified. label_lang field label languange _lang given form schema. choices list lists containing least values , available, labels choices given form schema. specific languages available, column return default language empty specified. Please notice whenever choice filters applied, return unfiltered choice list. choices_lang list lists containing least values , available, labels choices language _lang given form schema. Please notice whenever choice filters applied, return unfiltered choice list.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema_ext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show the extended schema of one form. — form_schema_ext","text":"ODK Central introduced new API endpoint version 0.8 returns parsed flattened list fields. replaces nested form schema challenging parse. list returned form_schema. However still misses important elements, particular labels choice_lists. form_schema_ext returns object form_schema adding labels choice lists languages available. done using return object form_xml. exact function signature form_schema. sense, call form_schema can replaced form_schema_ext function, however, prepared ODK Central version 0.8 higher. use earlier version, warning given.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the extended schema of one form. — form_schema_ext","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  # With current ODK Central (>0.7) # get extended schema: fsx <- form_schema_ext()  # print choice list in english: fsx[fsx$name == \"test_yn\", \"choices_english_(en)\"][[1]]  # view the extended schema: fsx }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a form_schema into a tibble of fields with name, type, and path. — form_schema_parse","text":"","code":"form_schema_parse(fs, path = \"Submissions\", verbose = get_ru_verbose())"},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema_parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a form_schema into a tibble of fields with name, type, and path. — form_schema_parse","text":"fs output form_schema nested list path base path form fields. Default: \"Submissions\". form_schema_parse recursively steps deeper nesting levels, reflected separate OData tables. returned value path reflects XForms group name, translates separate screens ODK Collect. Non-repeating form groups flattened main Submissions table. Repeating groups available separate OData tables. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema_parse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse a form_schema into a tibble of fields with name, type, and path. — form_schema_parse","text":"function used form_schema older versions ODK Central (pre 0.8). return form schema XML, requiring quite involved code form_schema_parse, newer ODK Central versions return JSON, parsed directly form_schema. form_schema returned ODK Central versions < 0.8 nested list lists containing form definition. form definition consists fields (type name), form groups, rendered separate ODK Collect screens. Form groups turn can also contain form fields. form_schema_parse recursively unpacks form extracts name type field. information informs handle_ru_attachments, handle_ru_datetimes, handle_ru_geopoints, handle_ru_geotraces, handle_ru_geoshapes.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_schema_parse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a form_schema into a tibble of fields with name, type, and path. — form_schema_parse","text":"","code":"if (FALSE) { # Option 1: in two steps, ODKC Version 0.7 fs <- form_schema(flatten = FALSE, parse = FALSE, odkc_version = 0.7) fsp <- form_schema_parse(fs)  # Option 2: in one go fsp <- form_schema(parse = TRUE)  fsp }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the XML representation of one form as list. — form_xml","text":"","code":"form_xml(   parse = TRUE,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/form_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the XML representation of one form as list. — form_xml","text":"parse Whether parse XML nested list, default: TRUE pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/form_xml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the XML representation of one form as list. — form_xml","text":"form XML nested list.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/form_xml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the XML representation of one form as list. — form_xml","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  # With explicit pid and fid fxml_defaults <- form_xml(1, \"build_xformsId\")  # With defaults fxml <- form_xml() listviewer::jsonedit(fxml)  # form_xml returns a nested list class(fxml) # > \"list\" }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_attachments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tibble of submission attachments. — fq_attachments","text":"","code":"fq_attachments"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_attachments.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A tibble of submission attachments. — fq_attachments","text":"tibble submission attachments.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_attachments.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A tibble of submission attachments. — fq_attachments","text":"output attachment_list run submissions test form system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsed submission data for an ODK Central form. — fq_data","text":"","code":"fq_data"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Parsed submission data for an ODK Central form. — fq_data","text":"output odata_submission_get set example data. tidy tibble referencing attachments included vignettes documentation relative path attachments/media/<filename>.<ext>.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Parsed submission data for an ODK Central form. — fq_data","text":"See system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\") odata_submission_get.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parsed submission data for an ODK Central form. — fq_data","text":"parsed OData response submissions ODK Central form. form represents Flora Quadrat, ca 50 50 m quadrat uniform plant community. XML .odkbuild versions form available system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\") system.file(\"extdata\", \"FloraQuadrat04.odkbuild\", package = \"ruODK\"), respectively. data kept date data used vignettes package tests. data comprised test records nonsensical data. forms used capture data development versions real-world forms.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data_strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsed submission data for a subgroup of an ODK Central form. — fq_data_strata","text":"","code":"fq_data_strata"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data_strata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Parsed submission data for a subgroup of an ODK Central form. — fq_data_strata","text":"output odata_submission_get set example data. tidy tibble referencing attachments included vignettes documentation relative path attachments/media/<filename>.<ext>.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data_strata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Parsed submission data for a subgroup of an ODK Central form. — fq_data_strata","text":"See system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\") odata_submission_get.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data_strata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parsed submission data for a subgroup of an ODK Central form. — fq_data_strata","text":"parsed OData response subgroup ODK Central form. subgroup represents vegetation strata per NVIS classification. vegetation stratum layer plants height, dominated one plant taxa. Plant communities can made five strata, two three common. data kept date data used vignettes package tests. data comprised test records nonsensical data. forms used capture data development versions real-world forms.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsed submission data for a subgroup of an ODK Central form. — fq_data_taxa","text":"","code":"fq_data_taxa"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data_taxa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Parsed submission data for a subgroup of an ODK Central form. — fq_data_taxa","text":"output odata_submission_get set example data. tidy tibble referencing attachments included vignettes documentation relative path attachments/media/<filename>.<ext>.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data_taxa.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Parsed submission data for a subgroup of an ODK Central form. — fq_data_taxa","text":"See system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\") odata_submission_get.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_data_taxa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parsed submission data for a subgroup of an ODK Central form. — fq_data_taxa","text":"parsed OData response subgroup ODK Central form. subgroup represents individual plant taxon encountered enumerators. Typically, one voucher specimen taken distinct encountered plant taxon. field name allocated enumerators, can proper canonical name (known) moniker. voucher specimens later determined taxonomic experts, provide real, terminal taxonomic name given voucher specimen. data kept date data used vignettes package tests. data comprised test records nonsensical data. forms used capture data development versions real-world forms.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_detail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tibble of form metadata. — fq_form_detail","text":"","code":"fq_form_detail"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_detail.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A tibble of form metadata. — fq_form_detail","text":"tibble form metadata.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_detail.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A tibble of form metadata. — fq_form_detail","text":"output form_detail run submissions test form system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tibble of forms. — fq_form_list","text":"","code":"fq_form_list"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A tibble of forms. — fq_form_list","text":"tibble forms","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_list.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A tibble of forms. — fq_form_list","text":"output form_list. run project.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JSON form schema for an ODK Central form. — fq_form_schema","text":"","code":"fq_form_schema"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_schema.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JSON form schema for an ODK Central form. — fq_form_schema","text":"output ruODK::form_schema(), tibble columns \"type\", \"name\" \"path\" one row per form field.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_schema.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"JSON form schema for an ODK Central form. — fq_form_schema","text":"See system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\") ruODK::form_schema().","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JSON form schema for an ODK Central form. — fq_form_schema","text":"parsed form schema ODK Central form. data kept date data used vignettes package tests. data comprised test records nonsensical data. forms used capture data development versions real-world forms. data used build vignettes offline without need credentials ODK Central server. test suite ensures \"canned\" data identical \"live\" data.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A nested list of a form definition. — fq_form_xml","text":"","code":"fq_form_xml"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_xml.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A nested list of a form definition. — fq_form_xml","text":"nested list form definition.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_form_xml.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A nested list of a form definition. — fq_form_xml","text":"output form_xml run test form system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OData metadata document for an ODK Central form. — fq_meta","text":"","code":"fq_meta"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_meta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OData metadata document for an ODK Central form. — fq_meta","text":"list lists","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_meta.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OData metadata document for an ODK Central form. — fq_meta","text":"See system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\")","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_meta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OData metadata document for an ODK Central form. — fq_meta","text":"OData response metadata ODK Central form. data kept date data used vignettes package tests. data comprised test records nonsensical data. forms used capture data development versions real-world forms.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_project_detail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tibble of project metadata. — fq_project_detail","text":"","code":"fq_project_detail"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_project_detail.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A tibble of project metadata. — fq_project_detail","text":"tibble project metadata.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_project_detail.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A tibble of project metadata. — fq_project_detail","text":"output project_detail run project containing test form system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_project_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tibble of project metadata. — fq_project_list","text":"","code":"fq_project_list"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_project_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A tibble of project metadata. — fq_project_list","text":"tibble project metadata.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_project_list.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A tibble of project metadata. — fq_project_list","text":"output project_list run projects configured ODK Central server.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OData submission data for an ODK Central form. — fq_raw","text":"","code":"fq_raw"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OData submission data for an ODK Central form. — fq_raw","text":"list lists","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OData submission data for an ODK Central form. — fq_raw","text":"See system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\")","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OData submission data for an ODK Central form. — fq_raw","text":"OData response submissions ODK Central form. form represents Flora Quadrat, ca 50 50 m quadrat uniform plant community. XML .odkbuild versions form available system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\") system.file(\"extdata\", \"FloraQuadrat04.odkbuild\", package = \"ruODK\"), respectively. data kept date data used vignettes package tests. data comprised test records nonsensical data. forms used capture data development versions real-world forms.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw_strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OData submission data for a subgroup of an ODK Central form. — fq_raw_strata","text":"","code":"fq_raw_strata"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw_strata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OData submission data for a subgroup of an ODK Central form. — fq_raw_strata","text":"list lists","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw_strata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OData submission data for a subgroup of an ODK Central form. — fq_raw_strata","text":"See system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\")","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw_strata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OData submission data for a subgroup of an ODK Central form. — fq_raw_strata","text":"OData response subgroup ODK Central form. subgroup represents vegetation strata per NVIS classification. vegetation stratum layer plants height, dominated one plant taxa. Plant communities can made five strata, two three common. data kept date data used vignettes package tests. data comprised test records nonsensical data. forms used capture data development versions real-world forms.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OData submission data for a subgroup of an ODK Central form. — fq_raw_taxa","text":"","code":"fq_raw_taxa"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw_taxa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OData submission data for a subgroup of an ODK Central form. — fq_raw_taxa","text":"list lists","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw_taxa.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OData submission data for a subgroup of an ODK Central form. — fq_raw_taxa","text":"See system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\")","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_raw_taxa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OData submission data for a subgroup of an ODK Central form. — fq_raw_taxa","text":"OData response subgroup ODK Central form. subgroup represents individual plant taxon encountered enumerators. Typically, one voucher specimen taken distinct encountered plant taxon. field name allocated enumerators, can proper canonical name (known) moniker. voucher specimens later determined taxonomic experts, provide real, terminal taxonomic name given voucher specimen. data kept date data used vignettes package tests. data comprised test records nonsensical data. forms used capture data development versions real-world forms.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_submission_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tibble of submission metadata. — fq_submission_list","text":"","code":"fq_submission_list"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_submission_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A tibble of submission metadata. — fq_submission_list","text":"tibble submission metadata.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_submission_list.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A tibble of submission metadata. — fq_submission_list","text":"output submission_list run test form system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_submissions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A nested list of submission data. — fq_submissions","text":"","code":"fq_submissions"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_submissions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A nested list of submission data. — fq_submissions","text":"nested list submission data.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_submissions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A nested list of submission data. — fq_submissions","text":"output submission_get run test form system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\") using submission instance IDs submission_list.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_svc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OData service document for an ODK Central form. — fq_svc","text":"","code":"fq_svc"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_svc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OData service document for an ODK Central form. — fq_svc","text":"tibble one row per submission data endpoint.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_svc.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OData service document for an ODK Central form. — fq_svc","text":"OData service document system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\")","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_svc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OData service document for an ODK Central form. — fq_svc","text":"OData response metadata ODK Central form. data kept date data used vignettes package tests. data comprised test records nonsensical data. forms used capture data development versions real-world forms.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_zip_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tibble of the main data table of records from a test form. — fq_zip_data","text":"","code":"fq_zip_data"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_zip_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A tibble of the main data table of records from a test form. — fq_zip_data","text":"tibble main records test form.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_zip_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A tibble of the main data table of records from a test form. — fq_zip_data","text":"submission_export run test form system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_zip_strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tibble of a repeated sub-group of records from a test form. — fq_zip_strata","text":"","code":"fq_zip_strata"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_zip_strata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A tibble of a repeated sub-group of records from a test form. — fq_zip_strata","text":"tibble repeated sub-group records test form.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_zip_strata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A tibble of a repeated sub-group of records from a test form. — fq_zip_strata","text":"submission_export run test form system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fq_zip_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tibble of a repeated sub-group of records from a test form. — fq_zip_taxa","text":"","code":"fq_zip_taxa"},{"path":"https://docs.ropensci.org/ruODK/reference/fq_zip_taxa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A tibble of a repeated sub-group of records from a test form. — fq_zip_taxa","text":"tibble repeated sub-group records test form.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fq_zip_taxa.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A tibble of a repeated sub-group of records from a test form. — fq_zip_taxa","text":"submission_export run test form system.file(\"extdata\", \"FloraQuadrat04.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fs_v7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The parsed XML form_schema of a form from ODK Central v0.6. — fs_v7","text":"","code":"fs_v7"},{"path":"https://docs.ropensci.org/ruODK/reference/fs_v7.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The parsed XML form_schema of a form from ODK Central v0.6. — fs_v7","text":"object class tbl_df (inherits tbl, data.frame) 12 rows 3 columns.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fs_v7.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The parsed XML form_schema of a form from ODK Central v0.6. — fs_v7","text":"form_schema_parse(fs_v7_raw)","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/fs_v7_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The unparsed XML form_schema of a form from ODK Central v0.6 as nested list. — fs_v7_raw","text":"","code":"fs_v7_raw"},{"path":"https://docs.ropensci.org/ruODK/reference/fs_v7_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The unparsed XML form_schema of a form from ODK Central v0.6 as nested list. — fs_v7_raw","text":"object class list length 6.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/fs_v7_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The unparsed XML form_schema of a form from ODK Central v0.6 as nested list. — fs_v7_raw","text":"form_schema(odkc_version = 0.7, parse = FALSE)","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/geo_fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The form_schema of a form containing geofields in GeoJSON. — geo_fs","text":"","code":"geo_fs"},{"path":"https://docs.ropensci.org/ruODK/reference/geo_fs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The form_schema of a form containing geofields in GeoJSON. — geo_fs","text":"object class tbl_df (inherits tbl, data.frame) 19 rows 6 columns.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/geo_fs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The form_schema of a form containing geofields in GeoJSON. — geo_fs","text":"form_schema run test form system.file(\"extdata\", \"Locations.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/geo_gj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The parsed submissions of a form containing geofields in GeoJSON. — geo_gj","text":"","code":"geo_gj"},{"path":"https://docs.ropensci.org/ruODK/reference/geo_gj.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The parsed submissions of a form containing geofields in GeoJSON. — geo_gj","text":"object class tbl_df (inherits tbl, data.frame) 1 rows 58 columns.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/geo_gj.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The parsed submissions of a form containing geofields in GeoJSON. — geo_gj","text":"odata_submission_get(wkt=FALSE, parse=TRUE) run test form system.file(\"extdata\", \"Locations.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/geo_gj88.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The parsed submissions of a form containing geofields in GeoJSON\nwith trailing empty coordinates present. — geo_gj88","text":"","code":"geo_gj88"},{"path":"https://docs.ropensci.org/ruODK/reference/geo_gj88.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The parsed submissions of a form containing geofields in GeoJSON\nwith trailing empty coordinates present. — geo_gj88","text":"object class tbl_df (inherits tbl, data.frame) 1 rows 51 columns.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/geo_gj88.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The parsed submissions of a form containing geofields in GeoJSON\nwith trailing empty coordinates present. — geo_gj88","text":"odata_submission_get(wkt=FALSE, parse=TRUE) run test form system.file(\"extdata\", \"Locations.xml\", package = \"ruODK\").","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/geo_gj88.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The parsed submissions of a form containing geofields in GeoJSON\nwith trailing empty coordinates present. — geo_gj88","text":"issue fixed #88. ODK Central versions 0.7 - 0.9 export geotraces geoshapes trailing empty coordinates. ruODK patch drop trailing empty coordinates. dataset used test patch ruODK.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/geo_gj_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The unparsed submissions of a form containing geofields in GeoJSON. — geo_gj_raw","text":"","code":"geo_gj_raw"},{"path":"https://docs.ropensci.org/ruODK/reference/geo_gj_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The unparsed submissions of a form containing geofields in GeoJSON. — geo_gj_raw","text":"object class list length 2.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/geo_gj_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The unparsed submissions of a form containing geofields in GeoJSON. — geo_gj_raw","text":"odata_submission_get(wkt=FALSE, parse=FALSE) run test form system.file(\"extdata\", \"Locations.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/geo_wkt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The parsed submissions of a form containing geofields in WKT. — geo_wkt","text":"","code":"geo_wkt"},{"path":"https://docs.ropensci.org/ruODK/reference/geo_wkt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The parsed submissions of a form containing geofields in WKT. — geo_wkt","text":"object class tbl_df (inherits tbl, data.frame) 1 rows 55 columns.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/geo_wkt.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The parsed submissions of a form containing geofields in WKT. — geo_wkt","text":"odata_submission_get(wkt=TRUE, parse=TRUE) run test form system.file(\"extdata\", \"Locations.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/geo_wkt88.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The parsed submissions of a form containing geofields in WKT\nwith trailing empty coordinates present. — geo_wkt88","text":"","code":"geo_wkt88"},{"path":"https://docs.ropensci.org/ruODK/reference/geo_wkt88.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The parsed submissions of a form containing geofields in WKT\nwith trailing empty coordinates present. — geo_wkt88","text":"object class tbl_df (inherits tbl, data.frame) 1 rows 48 columns.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/geo_wkt88.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The parsed submissions of a form containing geofields in WKT\nwith trailing empty coordinates present. — geo_wkt88","text":"odata_submission_get(wkt=TRUE, parse=TRUE) run test form system.file(\"extdata\", \"Locations.xml\", package = \"ruODK\").","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/geo_wkt88.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The parsed submissions of a form containing geofields in WKT\nwith trailing empty coordinates present. — geo_wkt88","text":"issue fixed #88. ODK Central versions 0.7 - 0.9 export geotraces geoshapes trailing empty coordinates. ruODK patch drop trailing empty coordinates. dataset used test patch ruODK.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/geo_wkt_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The unparsed submissions of a form containing geofields in WKT. — geo_wkt_raw","text":"","code":"geo_wkt_raw"},{"path":"https://docs.ropensci.org/ruODK/reference/geo_wkt_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The unparsed submissions of a form containing geofields in WKT. — geo_wkt_raw","text":"object class list length 2.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/geo_wkt_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The unparsed submissions of a form containing geofields in WKT. — geo_wkt_raw","text":"odata_submission_get(wkt=TRUE, parse=FALSE) run test form system.file(\"extdata\", \"Locations.xml\", package = \"ruODK\").","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_attachment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download one media attachment. — get_one_attachment","text":"","code":"get_one_attachment(   pth,   fn,   src,   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries(),   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_attachment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download one media attachment. — get_one_attachment","text":"pth local file path save attachment . fn attachment filename, per ODK form submission. NA, file downloaded, NA returned. file exist ODK Central, warning emitted. src attachment's download URL, generated attachment_url. src must contain uuid: prefix. Note main Submissions table contains submission id field id, whereas nested sub-tables contain submission id field submissions_id. url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_attachment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download one media attachment. — get_one_attachment","text":"relative local path downloaded attachment NA.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_attachment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download one media attachment. — get_one_attachment","text":"helper function used attachment_get. function vectorised, mapped attachment_get tibble input parameters.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_attachment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download one media attachment. — get_one_attachment","text":"","code":"if (FALSE) { # Step 1: Setup ruODK with OData Service URL (has url, pid, fid) # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  # Step 2: Construct attachment_url att_url <- ruODK:::attachment_url(   \"uuid:d3bcefea-32a8-4dbc-80ca-4ecb0678e2b0\",   \"filename.jpg\" )  # Step 3: Get one attachment local_fn <- get_one_attachment(\"media/filename.jpg\", \"filename.jpg\", att_url)  # In real life: done in bulk behind the scenes during odata_submission_get() }"},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission.html","id":null,"dir":"Reference","previous_headings":"","what":"Download one submission. — get_one_submission","title":"Download one submission. — get_one_submission","text":"function workhorse vectorised function submission_get, gets submissions list submission IDs.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download one submission. — get_one_submission","text":"","code":"get_one_submission(   iid,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download one submission. — get_one_submission","text":"iid instance_id, UUID, returned submission_list. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download one submission. — get_one_submission","text":"nested list submission data.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download one submission. — get_one_submission","text":"Note function returns nested list containing repeating subgroups. presence length repeating subgroups non-deterministic entirely depends completeness submission data, rectangle . Rectangling requires knowledge form schema completeness submission data.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download one submission. — get_one_submission","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  # With explicit credentials, see tests sl <- submission_list()  sub <- get_one_submission(sl$instance_id[[1]]) listviewer::jsonedit(sub)  # The details for one submission depend on the form fields length(sub) # > 11  # The items are the field names. Repeated groups have the same name. names(sub) # > \"meta\"                     \"encounter_start_datetime\" \"reporter\" # > \"device_id\"                \"location\"                 \"habitat\" # > \"vegetation_structure\"     \"perimeter\"                \"taxon_encounter\" # > \"taxon_encounter\"          \"encounter_end_datetime\" }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission_attachment_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all attachments of one submission. — get_one_submission_attachment_list","text":"","code":"get_one_submission_attachment_list(   iid,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission_attachment_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all attachments of one submission. — get_one_submission_attachment_list","text":"iid instance_id, UUID, returned submission_list. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission_attachment_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all attachments of one submission. — get_one_submission_attachment_list","text":"tibble containing high-level details submission attachments. One row per submission attachment, columns submission attributes:","code":"* name: The attachment filename, e.g. 12345.jpg     * exists: Whether the attachment for that submission exists on the       server."},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission_attachment_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List all attachments of one submission. — get_one_submission_attachment_list","text":"Submission created, either OpenRosa REST interface, XML data analysed determine file attachments references: may photos video taken part survey, audit/timing log, among things. reference expected attachment, expectations recorded permanently alongside Submission. subresource, can list expected attachments, see whether server actually copy , download, upload, re-upload, clear binary data particular attachment. can retrieve list expected Submission attachments route, along boolean flag indicating whether server actually copy expected file . server file, can append filename request URL download file.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission_attachment_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all attachments of one submission. — get_one_submission_attachment_list","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  sl <- submission_list()  al <- get_one_submission_attachment_list(sl$instance_id[[1]]) al %>% knitr::kable(.)  # attachment_list returns a tibble class(al) # > c(\"tbl_df\", \"tbl\", \"data.frame\")  # Submission attributes are the tibble's columns names(al) # > \"name\" \"exists\" }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission_audit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download server audit logs for one submission. — get_one_submission_audit","text":"","code":"get_one_submission_audit(   iid,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission_audit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download server audit logs for one submission. — get_one_submission_audit","text":"iid instance_id, UUID, returned submission_list. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission_audit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download server audit logs for one submission. — get_one_submission_audit","text":"nested list submission data.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission_audit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download server audit logs for one submission. — get_one_submission_audit","text":"function workhorse vectorised function submission_audit_get, gets server audit logs list submission IDs. Note function returns nested list containing repeating subgroups. presence length repeating subgroups non-deterministic entirely depends completeness submission data, rectangle . Rectangling requires knowledge form schema completeness submission data.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/get_one_submission_audit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download server audit logs for one submission. — get_one_submission_audit","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  # With explicit credentials, see tests sl <- submission_list()  sub <- get_one_submission_audit(sl$instance_id[[1]]) listviewer::jsonedit(sub)  # The details for one submission depend on the form fields length(sub) # > 11  # The items are the field names. Repeated groups have the same name. names(sub) # > \"meta\"                     \"encounter_start_datetime\" \"reporter\" # > \"device_id\"                \"location\"                 \"habitat\" # > \"vegetation_structure\"     \"perimeter\"                \"taxon_encounter\" # > \"taxon_encounter\"          \"encounter_end_datetime\" }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_attachments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and link submission attachments according to a form schema. — handle_ru_attachments","text":"","code":"handle_ru_attachments(   data,   form_schema,   local_dir = \"media\",   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries(),   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_attachments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and link submission attachments according to a form schema. — handle_ru_attachments","text":"data Submissions rectangled tibble. E.g. output   form_schema form_schema submissions. E.g. output ruODK::form_schema(). local_dir local folder save downloaded files , default: \"media\". pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":"ruODK::odata_submission_get(parse = FALSE) %>% ruODK::odata_submission_rectangle()"},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_attachments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and link submission attachments according to a form schema. — handle_ru_attachments","text":"submissions tibble attachments downloaded linked local_dir.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_attachments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and link submission attachments according to a form schema. — handle_ru_attachments","text":"given tibble submissions, download link attachments columns marked form schema type \"binary\".","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_attachments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and link submission attachments according to a form schema. — handle_ru_attachments","text":"","code":"if (FALSE) { library(magrittr) data(\"fq_raw\") data(\"fq_form_schema\") t <- tempdir() fs::dir_ls(t) %>% fs::file_delete() fq_with_att <- fq_raw %>%   ruODK::odata_submission_rectangle() %>%   ruODK::handle_ru_attachments(     form_schema = fq_form_schema,     local_dir = t,     pid = ruODK::get_test_pid(),     fid = ruODK::get_test_fid(),     url = ruODK::get_test_url(),     un = ruODK::get_test_un(),     pw = ruODK::get_test_pw(),     verbose <- ruODK::get_ru_verbose()   ) # There should be files in local_dir testthat::expect_true(fs::dir_ls(t) %>% length() > 0) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_datetimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse datetimes of submission data according to a form schema. — handle_ru_datetimes","text":"","code":"handle_ru_datetimes(   data,   form_schema,   orders = c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"),   tz = get_default_tz(),   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_datetimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse datetimes of submission data according to a form schema. — handle_ru_datetimes","text":"data Submissions rectangled tibble. E.g. output   form_schema form_schema submissions. E.g. output ruODK::form_schema(). orders (vector character) Orders datetime elements lubridate. Default: c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"). tz timezone convert dates times . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's timezone can set globally per function. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":"ruODK::odata_submission_get(parse = FALSE) %>% ruODK::odata_submission_rectangle()"},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_datetimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse datetimes of submission data according to a form schema. — handle_ru_datetimes","text":"submissions tibble date/dateTime columns mutated lubridate datetimes.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_datetimes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse datetimes of submission data according to a form schema. — handle_ru_datetimes","text":"given tibble submissions, parse columns marked form schema type \"date\" \"dateTime\" using set lubridate orders given timezone.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_datetimes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse datetimes of submission data according to a form schema. — handle_ru_datetimes","text":"","code":"if (FALSE) { library(magrittr) data(\"fq_raw\") data(\"fq_form_schema\")  fq_with_dates <- fq_raw %>%   ruODK::odata_submission_rectangle() %>%   ruODK::handle_ru_datetimes(form_schema = fq_form_schema)  dplyr::glimpse(fq_with_dates) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geopoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split all geopoints of a submission tibble into their components. — handle_ru_geopoints","text":"","code":"handle_ru_geopoints(data, form_schema, wkt = FALSE, verbose = get_ru_verbose())"},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geopoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split all geopoints of a submission tibble into their components. — handle_ru_geopoints","text":"data Submissions rectangled tibble. E.g. output   form_schema form_schema submissions. E.g. output ruODK::form_schema(). wkt Whether geofields GeoJSON (FALSE) WKT strings (TRUE), default: FALSE. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":"ruODK::odata_submission_get(parse = FALSE) %>% ruODK::odata_submission_rectangle()"},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geopoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split all geopoints of a submission tibble into their components. — handle_ru_geopoints","text":"submissions tibble geopoints retained original format, plus columns coordinate components provided split_geopoint.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geopoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split all geopoints of a submission tibble into their components. — handle_ru_geopoints","text":"given tibble submissions, find columns listed form schema type geopoint, extract components. Extracted components longitude (X), latitude (Y), altitude (Z, given), accuracy (M, given). original column retained allow parsing spatially enabled formats.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geopoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split all geopoints of a submission tibble into their components. — handle_ru_geopoints","text":"","code":"library(magrittr) data(\"geo_fs\") data(\"geo_gj_raw\") data(\"geo_wkt_raw\")  # GeoJSON geo_gj_parsed <- geo_gj_raw %>%   ruODK::odata_submission_rectangle(form_schema = geo_fs) %>%   ruODK::handle_ru_geopoints(form_schema = geo_fs, wkt = FALSE)  dplyr::glimpse(geo_gj_parsed) #> Rows: 1 #> Columns: 40 #> $ meta_instance_id                      <chr> \"uuid:2d3dbc0c-70f5-4c99-a812-a8… #> $ device_id                             <chr> \"collect:OHnydk6INUIfDHNl\" #> $ start_time                            <chr> \"2023-12-04T16:35:36.206+08:00\" #> $ username                              <lgl> NA #> $ subscriber_id                         <lgl> NA #> $ point_location_point_gps_longitude    <dbl> 115.7745 #> $ point_location_point_gps_latitude     <dbl> -31.89503 #> $ point_location_point_gps_altitude     <dbl> 6.6 #> $ point_location_point_gps_accuracy     <dbl> 16.555 #> $ point_location_point_gps              <list> [\"Point\", [115.7745, -31.89503, … #> $ point_location_point_map_longitude    <dbl> 115.7745 #> $ point_location_point_map_latitude     <dbl> -31.89503 #> $ point_location_point_map_altitude     <dbl> 6.6 #> $ point_location_point_map_accuracy     <dbl> 15.996 #> $ point_location_point_map              <list> [\"Point\", [115.7745, -31.89503, … #> $ point_location_point_manual_longitude <dbl> 115.7745 #> $ point_location_point_manual_latitude  <dbl> -31.8967 #> $ point_location_point_manual_altitude  <int> 0 #> $ point_location_point_manual_accuracy  <int> 0 #> $ point_location_point_manual           <list> [\"Point\", [115.7745, -31.8967, 0… #> $ path_location_path_gps                <list> [\"LineString\", [[115.7756, -31.8… #> $ path_location_path_map                <list> [\"LineString\", [[115.7733, -31.8… #> $ path_location_path_manual             <list> [\"LineString\", [[115.7726, -31.8… #> $ shape_location_shape_gps              <list> [\"Polygon\", [[[115.7658, -31.871… #> $ shape_location_shape_map              <list> [\"Polygon\", [[[115.7745, -31.895… #> $ shape_location_shape_manual           <list> [\"Polygon\", [[[115.797, -31.920… #> $ end_time                              <chr> \"2023-12-04T16:38:49.702+08:00\" #> $ id                                    <chr> \"uuid:2d3dbc0c-70f5-4c99-a812-a8… #> $ system_submission_date                <chr> \"2023-12-04T08:38:52.712Z\" #> $ system_updated_at                     <chr> \"2024-03-05T05:28:51.126Z\" #> $ system_submitter_id                   <chr> \"12\" #> $ system_submitter_name                 <chr> \"ruodk\" #> $ system_attachments_present            <int> 0 #> $ system_attachments_expected           <int> 0 #> $ system_status                         <lgl> NA #> $ system_review_state                   <chr> \"approved\" #> $ system_device_id                      <chr> \"collect:OHnydk6INUIfDHNl\" #> $ system_edits                          <int> 0 #> $ system_form_version                   <chr> \"\" #> $ odata_context                         <chr> \"https://ruodk.getodk.cloud/v1/p…  # WKT geo_wkt_parsed <- geo_wkt_raw %>%   ruODK::odata_submission_rectangle(form_schema = geo_fs) %>%   ruODK::handle_ru_geopoints(form_schema = geo_fs, wkt = TRUE)  dplyr::glimpse(geo_wkt_parsed) #> Rows: 1 #> Columns: 37 #> $ meta_instance_id                      <chr> \"uuid:2d3dbc0c-70f5-4c99-a812-a8… #> $ device_id                             <chr> \"collect:OHnydk6INUIfDHNl\" #> $ start_time                            <chr> \"2023-12-04T16:35:36.206+08:00\" #> $ username                              <lgl> NA #> $ subscriber_id                         <lgl> NA #> $ point_location_point_gps              <chr> \"POINT (115.7745212 -31.8950326 … #> $ point_location_point_gps_longitude    <dbl> 115.7745 #> $ point_location_point_gps_latitude     <dbl> -31.89503 #> $ point_location_point_gps_altitude     <dbl> 6.6 #> $ point_location_point_map              <chr> \"POINT (115.7745049 -31.89503 6.… #> $ point_location_point_map_longitude    <dbl> 115.7745 #> $ point_location_point_map_latitude     <dbl> -31.89503 #> $ point_location_point_map_altitude     <dbl> 6.6 #> $ point_location_point_manual           <chr> \"POINT (115.77449776232241 -31.8… #> $ point_location_point_manual_longitude <dbl> 115.7745 #> $ point_location_point_manual_latitude  <dbl> -31.8967 #> $ point_location_point_manual_altitude  <int> 0 #> $ path_location_path_gps                <chr> \"LINESTRING (115.77564273029566 … #> $ path_location_path_map                <chr> \"LINESTRING (115.77329177409409 … #> $ path_location_path_manual             <chr> \"LINESTRING (115.77255014330147 … #> $ shape_location_shape_gps              <chr> \"POLYGON ((115.76582819223404 -3… #> $ shape_location_shape_map              <chr> \"POLYGON ((115.7744988 -31.89504… #> $ shape_location_shape_manual           <chr> \"POLYGON ((115.79702932387592 -3… #> $ end_time                              <chr> \"2023-12-04T16:38:49.702+08:00\" #> $ id                                    <chr> \"uuid:2d3dbc0c-70f5-4c99-a812-a8… #> $ system_submission_date                <chr> \"2023-12-04T08:38:52.712Z\" #> $ system_updated_at                     <chr> \"2024-03-05T05:28:51.126Z\" #> $ system_submitter_id                   <chr> \"12\" #> $ system_submitter_name                 <chr> \"ruodk\" #> $ system_attachments_present            <int> 0 #> $ system_attachments_expected           <int> 0 #> $ system_status                         <lgl> NA #> $ system_review_state                   <chr> \"approved\" #> $ system_device_id                      <chr> \"collect:OHnydk6INUIfDHNl\" #> $ system_edits                          <int> 0 #> $ system_form_version                   <chr> \"\" #> $ odata_context                         <chr> \"https://ruodk.getodk.cloud/v1/p…"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geoshapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split all geoshapes of a submission tibble into their components. — handle_ru_geoshapes","text":"","code":"handle_ru_geoshapes(   data,   form_schema,   wkt = FALSE,   odkc_version = get_default_odkc_version(),   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geoshapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split all geoshapes of a submission tibble into their components. — handle_ru_geoshapes","text":"data Submissions rectangled tibble. E.g. output   form_schema form_schema submissions. E.g. output ruODK::form_schema(). wkt Whether geofields GeoJSON (FALSE) WKT strings (TRUE), default: FALSE. odkc_version ODK Central version semantic version string (year.minor.patch), e.g. \"2023.5.1\". version shown ODK Central's version page /version.txt. Discard \"v\". ruODK uses parameter adjust breaking changes ODK Central. Default: get_default_odkc_version \"2023.5.1\" unset. Set default get_default_odkc_version ru_setup(odkc_version=\"2023.5.1\"). See vignette(\"Setup\", package = \"ruODK\"). verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":"ruODK::odata_submission_get(parse = FALSE) %>% ruODK::odata_submission_rectangle(form_schema = ...)"},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geoshapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split all geoshapes of a submission tibble into their components. — handle_ru_geoshapes","text":"submissions tibble geoshapes retained original format, plus columns first point's coordinate components provided split_geoshape.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geoshapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split all geoshapes of a submission tibble into their components. — handle_ru_geoshapes","text":"given tibble submissions, find columns listed form schema type geoshape, extract components. Extracted components longitude (X), latitude (Y), altitude (Z, given), accuracy (M, given) first point geoshape. original column retained allow parsing spatially enabled formats.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geoshapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split all geoshapes of a submission tibble into their components. — handle_ru_geoshapes","text":"","code":"if (FALSE) { library(magrittr) data(\"geo_fs\") data(\"geo_wkt_raw\") data(\"geo_gj_raw\")  # GeoJSON geo_gj_parsed <- geo_gj_raw %>%   ruODK::odata_submission_rectangle(form_schema = geo_fs) %>%   ruODK::handle_ru_geoshapes(form_schema = geo_fs, wkt = FALSE)  dplyr::glimpse(geo_gj_parsed)  # WKT geo_wkt_parsed <- geo_wkt_raw %>%   ruODK::odata_submission_rectangle(form_schema = geo_fs) %>%   ruODK::handle_ru_geoshapes(form_schema = geo_fs, wkt = TRUE)  dplyr::glimpse(geo_wkt_parsed) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geotraces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split all geotraces of a submission tibble into their components. — handle_ru_geotraces","text":"","code":"handle_ru_geotraces(   data,   form_schema,   wkt = FALSE,   odkc_version = get_default_odkc_version(),   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geotraces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split all geotraces of a submission tibble into their components. — handle_ru_geotraces","text":"data Submissions rectangled tibble. E.g. output   form_schema form_schema submissions. E.g. output ruODK::form_schema(). wkt Whether geofields GeoJSON (FALSE) WKT strings (TRUE), default: FALSE. odkc_version ODK Central version semantic version string (year.minor.patch), e.g. \"2023.5.1\". version shown ODK Central's version page /version.txt. Discard \"v\". ruODK uses parameter adjust breaking changes ODK Central. Default: get_default_odkc_version \"2023.5.1\" unset. Set default get_default_odkc_version ru_setup(odkc_version=\"2023.5.1\"). See vignette(\"Setup\", package = \"ruODK\"). verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":"ruODK::odata_submission_get(parse = FALSE) %>% ruODK::odata_submission_rectangle(form_schema = ...)"},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geotraces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split all geotraces of a submission tibble into their components. — handle_ru_geotraces","text":"submissions tibble geotraces retained original format, plus columns first point's coordinate components provided split_geotrace.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geotraces.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split all geotraces of a submission tibble into their components. — handle_ru_geotraces","text":"given tibble submissions, find columns listed form schema type geotrace, extract components. Extracted components longitude (X), latitude (Y), altitude (Z, given), accuracy (M, given) first point geotrace. original column retained allow parsing spatially enabled formats.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/handle_ru_geotraces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split all geotraces of a submission tibble into their components. — handle_ru_geotraces","text":"","code":"if (FALSE) { library(magrittr) data(\"geo_fs\") data(\"geo_wkt_raw\") data(\"geo_gj_raw\")  # GeoJSON geo_gj_parsed <- geo_gj_raw %>%   ruODK::odata_submission_rectangle(form_schema = geo_fs) %>%   ruODK::handle_ru_geotraces(form_schema = geo_fs, wkt = FALSE)  dplyr::glimpse(geo_gj_parsed)  # WKT geo_wkt_parsed <- geo_wkt_raw %>%   ruODK::odata_submission_rectangle(form_schema = geo_fs) %>%   ruODK::handle_ru_geotraces(form_schema = geo_fs, wkt = TRUE)  dplyr::glimpse(geo_wkt_parsed) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/isodt_to_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse an ISO8601 datetime string to a timezone aware datetime. — isodt_to_local","text":"","code":"isodt_to_local(   datetime_string,   orders = c(\"YmdHMS\", \"YmdHMSz\"),   tz = get_default_tz() )"},{"path":"https://docs.ropensci.org/ruODK/reference/isodt_to_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse an ISO8601 datetime string to a timezone aware datetime. — isodt_to_local","text":"datetime_string (character) ISO8601 datetime string produced XForms exported ODK Central. orders (vector character) Orders datetime elements lubridate. Default: c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\"). tz timezone convert dates times . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's timezone can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/isodt_to_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse an ISO8601 datetime string to a timezone aware datetime. — isodt_to_local","text":"lubridate PosixCT datetime given timezone.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/isodt_to_local.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse an ISO8601 datetime string to a timezone aware datetime. — isodt_to_local","text":"function used internally ruODK parse ISO timestamps timezone-aware local times.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/lifecycle_shim.html","id":null,"dir":"Reference","previous_headings":"","what":"Shim to allow Import of lifecycle, required for building docs. — lifecycle_shim","title":"Shim to allow Import of lifecycle, required for building docs. — lifecycle_shim","text":"HT Jim Hester, Lionel Henry, Jenny Bryan advice","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/lifecycle_shim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shim to allow Import of lifecycle, required for building docs. — lifecycle_shim","text":"","code":"lifecycle_shim()"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/listcol_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A functional to extract names of list columns from a tibble. — listcol_names","text":"","code":"listcol_names(tbl)"},{"path":"https://docs.ropensci.org/ruODK/reference/listcol_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A functional to extract names of list columns from a tibble. — listcol_names","text":"tbl tibble, possibly list columns","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/listcol_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A functional to extract names of list columns from a tibble. — listcol_names","text":"vector list column names","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/odata_metadata_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata from an OData URL ending in .svc as list of lists. — odata_metadata_get","text":"","code":"odata_metadata_get(   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/odata_metadata_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata from an OData URL ending in .svc as list of lists. — odata_metadata_get","text":"pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/odata_metadata_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata from an OData URL ending in .svc as list of lists. — odata_metadata_get","text":"nested list containing Edmx (dataset schema definition) .attrs (Version).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/odata_metadata_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata from an OData URL ending in .svc as list of lists. — odata_metadata_get","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  meta <- odata_metadata_get() listviewer::jsonedit(meta) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/odata_service_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve service metadata from an OData URL ending in .svc as tibble. — odata_service_get","text":"","code":"odata_service_get(   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/odata_service_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve service metadata from an OData URL ending in .svc as tibble. — odata_service_get","text":"pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/odata_service_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve service metadata from an OData URL ending in .svc as tibble. — odata_service_get","text":"tibble one row per submission data endpoint. Columns: name, kind, url.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/odata_service_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve service metadata from an OData URL ending in .svc as tibble. — odata_service_get","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  svc <- odata_service_get() svc }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/odata_submission_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve and rectangle form submissions, parse dates, geopoints, download and\nlink attachments. — odata_submission_get","text":"","code":"odata_submission_get(   table = \"Submissions\",   skip = NULL,   top = NULL,   count = FALSE,   wkt = FALSE,   expand = FALSE,   filter = NULL,   parse = TRUE,   download = TRUE,   orders = c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"),   local_dir = \"media\",   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   odkc_version = get_default_odkc_version(),   tz = get_default_tz(),   retries = get_retries(),   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/odata_submission_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve and rectangle form submissions, parse dates, geopoints, download and\nlink attachments. — odata_submission_get","text":"table submission EntityType, plain words, table name. Default: Submissions (main table). Change Submissions.GROUP_NAME repeating form groups. group name can found odata_service_get. skip number rows omitted results. Example: 10, default: NA (none skipped). top number rows return. Example: 100, default: NA (returned). count TRUE, @odata.count property returned response ODK Central. Default: FALSE. wkt TRUE, geospatial data returned WKT (Well Known Text) strings. Default: FALSE, returns GeoJSON structures. Note accuracy returned GeoJSON. expand TRUE, subtables expanded included column names containing number repeat, group name, field name. parameter supported ODK Central v1.2 onwards ignored earlier versions ODK Central. version inferred parameter odkc_version. Default: FALSE. filter provided, filter responses matching query. odkc_version 1.1, parameter discarded. ODK Central v1.5, fields system/submitterId, system/submissionDate, __system/updatedAt  __system/reviewState available reference. operators lt, lte, eq, neq, gte, gt, , , supported, built-functions now, year, month, day, hour, minute, second. ruODK validate query string given filter. highly recommended refer ODK Central API documentation well OData spec filters. filter options capabilities. parse Whether parse submission data based form schema. Dates datetimes parsed local time. Attachments downloaded, field updated local file path. Point locations split components; GeoJSON (wkt=FALSE) split latitude, longitude, altitude accuracy (anonymous field names), WKT split longitude, latitude,altitude (missing accuracy) prefixed original field name. See details handling geotraces geoshapes. Default: TRUE. download Whether download attachments local_dir . future ODK Central supports hot-linking attachments, parameter replace attachment file names fully qualified attachment URL. Default: TRUE. orders (vector character) Orders datetime elements lubridate. Default: c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"). local_dir local folder save downloaded files , default: \"media\". pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). odkc_version ODK Central version semantic version string (year.minor.patch), e.g. \"2023.5.1\". version shown ODK Central's version page /version.txt. Discard \"v\". ruODK uses parameter adjust breaking changes ODK Central. Default: get_default_odkc_version \"2023.5.1\" unset. Set default get_default_odkc_version ru_setup(odkc_version=\"2023.5.1\"). See vignette(\"Setup\", package = \"ruODK\"). tz timezone convert dates times . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's timezone can set globally per function. retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/odata_submission_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve and rectangle form submissions, parse dates, geopoints, download and\nlink attachments. — odata_submission_get","text":"list lists. value contains submissions list lists. @odata.context URL metadata. @odata.count total number rows table.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/odata_submission_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve and rectangle form submissions, parse dates, geopoints, download and\nlink attachments. — odata_submission_get","text":"odata_submission_get downloads submissions (default) main form group (submission table) including non-repeating form groups, table specified parameter table. parameter parse=TRUE (default), submission data parsed tibble. fields type dateTime date parsed dates, optional parameter tz specify local timezone. parameter local_dir (default: media) specifies local directory downloaded attachment files. Already existing, previously downloaded attachments retained. parameter wkt=TRUE, spatial fields returned WKT, rather GeoJSON. addition, fields type geopoint split latitude, longitude, altitude, prefixed original field name. E.g. field start_location type geopoint split start_location_latitude, start_location_longitude, start_location_altitude. field name prefix allow multiple fields type geopoint split components without naming conflicts. Geotraces (lines) gepshapes (polygons) retained original format, plus columns first point's coordinate components provided split_geotrace split_geoshape, respectively. Entirely unpopulated form fields, well notes form groups, excluded resulting tibble. Submitting least one complete form instance prevent accidental exclusion otherwise mostly empty form field. remaining manual step optionally join sub-tables master table. parameter verbose enables diagnostic messages along download parsing process. parameter parse=FALSE, submission data presented nested list, R equivalent JSON structure returned API. , odata_submission_rectangle can rectangle data tibble, subsequent lines handle_ru_datetimes, handle_ru_attachments, handle_ru_geopoints, handle_ru_geotraces, handle_ru_geoshapes parse dates, download link file attachments, extract coordinates geofields. ruODK offers manual explicit pathway option investigate narrow unexpected unwanted behaviour.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/odata_submission_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve and rectangle form submissions, parse dates, geopoints, download and\nlink attachments. — odata_submission_get","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  form_tables <- ruODK::odata_service_get() data <- odata_submission_get() # default: main data table data <- odata_submission_get(table = form_tables$url[1]) # same, explicitly data_sub1 <- odata_submission_get(table = form_tables$url[2]) # sub-table 1 data_sub2 <- odata_submission_get(table = form_tables$url[3]) # sub-table 2  # Skip one row, return the next 1 rows (top), include total row count data <- odata_submission_get(   table = form_tables$url[1],   skip = 1,   top = 1,   count = TRUE )  # Filter submissions data <- odata_submission_get(   table = form_tables$url[1],   filter = \"year(__system/submissionDate) lt year(now())\" ) data <- odata_submission_get(   table = form_tables$url[1],   filter = \"year(__system/submissionDate) lt 2020\" )  # To include all of the month of January, you need to filter by either # filter = \"__system/submissionDate le 2020-01-31T23:59:59.999Z\" # or # filter = \"__system/submissionDate lt 2020-02-01\". # Instead of timezone UTC (\"Z\"), you can also filter by any other timezone. }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/odata_submission_rectangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rectangle the output of odata_submission_get(parse=FALSE)\ninto a tidy tibble and unnest all levels. — odata_submission_rectangle","text":"","code":"odata_submission_rectangle(   data,   names_repair = \"universal\",   names_sep = \"_\",   form_schema = NULL,   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/odata_submission_rectangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rectangle the output of odata_submission_get(parse=FALSE)\ninto a tidy tibble and unnest all levels. — odata_submission_rectangle","text":"data nested list lists given odata_submission_get. names_repair argument names_repair tidyr::unnest_wider, default: \"universal\". names_sep argument names_sep tidyr::unnest_wider, default: \"_\". Un-nested variables inside list column prefixed list column name, separated names_sep. avoids unsightly repaired names latitude...1. form_schema optional form_schema, like output form_schema. form schema supplied, location fields unnested. WKT location fields contain plain text never unnested, GeoJSON location fields cause errors unnesting. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/odata_submission_rectangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rectangle the output of odata_submission_get(parse=FALSE)\ninto a tidy tibble and unnest all levels. — odata_submission_rectangle","text":"submissions un-nested tibble","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/odata_submission_rectangle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rectangle the output of odata_submission_get(parse=FALSE)\ninto a tidy tibble and unnest all levels. — odata_submission_rectangle","text":"function cleans names janitor::clean_names() drops prefix value_.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/odata_submission_rectangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rectangle the output of odata_submission_get(parse=FALSE)\ninto a tidy tibble and unnest all levels. — odata_submission_rectangle","text":"","code":"if (FALSE) { # Using canned data data_parsed <- odata_submission_rectangle(fq_raw, verbose = TRUE) # Field \"device_id\" is known part of fq_raw testthat::expect_equal(   data_parsed$device_id[[1]],   fq_raw$value[[1]]$device_id )  # fq_raw has two submissions testthat::expect_equal(length(fq_raw$value), nrow(data_parsed)) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/odata_svc_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve URL, project ID, and form ID from an ODK Central OData service URL. — odata_svc_parse","text":"","code":"odata_svc_parse(svc)"},{"path":"https://docs.ropensci.org/ruODK/reference/odata_svc_parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve URL, project ID, and form ID from an ODK Central OData service URL. — odata_svc_parse","text":"svc (character) OData service URL form provided ODK Central form submissions tab. Example: \"https://URL/v1/projects/PID/forms/FID.svc\"","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/odata_svc_parse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve URL, project ID, and form ID from an ODK Central OData service URL. — odata_svc_parse","text":"named list three components (type character): url ODK Central base URL. pid project ID. fid form ID.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/parse_odkc_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a given ODK Central version string or number into a semver. — parse_odkc_version","text":"","code":"parse_odkc_version(v, env_var = \"ODKC_VERSION\")"},{"path":"https://docs.ropensci.org/ruODK/reference/parse_odkc_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a given ODK Central version string or number into a semver. — parse_odkc_version","text":"v string (e.g. \"ODKC_VERSION=\") number (e.g. 0.8, 1.5) complete partial semver, semver class \"svlist\". env_var string indicating environment variable targeted. used warning advise environment variable update. set empty string, warning message suppressed. Default: \"ODKC_VERSION\".","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/parse_odkc_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a given ODK Central version string or number into a semver. — parse_odkc_version","text":"semver::svlist version semver major, minor, patch.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/parse_odkc_version.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse a given ODK Central version string or number into a semver. — parse_odkc_version","text":"Past versions ruODK advised set ODKC_VERSION floating point number indicating major minor versions, e.g. ODKC_VERSION=0.7 ODKC_VERSION=1.5. ODK Central since switched semantic versioning, e.g. ODKC_VERSION=ODKC_VERSION=. preserve backwards compatibility, ruODK handles formats gracefully, emits helpful warning update version string older format detected, version string missing minor patch version.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/parse_odkc_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a given ODK Central version string or number into a semver. — parse_odkc_version","text":"","code":"parse_odkc_version(\"1.2.3\") #> [1] Maj: 1 Min: 2 Pat: 3 #>   # Warn: too short parse_odkc_version(\"1\") #> [1] Maj: 1 Min: 0 Pat: 0 #>  parse_odkc_version(\"1.2\") #> [1] Maj: 1 Min: 2 Pat: 0 #>   # Warn: too long parse_odkc_version(\"1.2.3.4\") #> [1] Maj: 1 Min: 2 Pat: 3 #>   # Warn: otherwise invalid parse_odkc_version(\"1.2.\") #> [1] Maj: 1 Min: 2 Pat: 0 #>  parse_odkc_version(\".2.3\") #> [1] Maj: 0 Min: 2 Pat: 3 #>"},{"path":"https://docs.ropensci.org/ruODK/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://docs.ropensci.org/ruODK/reference/predict_ruodk_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict a field name after tidyr::unnest_wider(names_sep=","title":"Predict a field name after tidyr::unnest_wider(names_sep=","text":"Predict field name tidyr::unnest_wider(names_sep=\"_\") prefixes form path.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/predict_ruodk_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict a field name after tidyr::unnest_wider(names_sep=","text":"","code":"predict_ruodk_name(name_str, path_str)"},{"path":"https://docs.ropensci.org/ruODK/reference/predict_ruodk_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict a field name after tidyr::unnest_wider(names_sep=","text":"name_str Xforms field name string. path_str path string, e.g. \"Submissions\" \"Submissions.group_name\".","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/predict_ruodk_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict a field name after tidyr::unnest_wider(names_sep=","text":"name built tidyr::unnest_wider(names_sep=\"_\").","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/predict_ruodk_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict a field name after tidyr::unnest_wider(names_sep=","text":"","code":"if (FALSE) { predict_ruodk_name(\"bar\", \"Submissions.foo\") # > \"foo_bar\" predict_ruodk_name(\"bar\", \"Submissions\") # > \"bar\" predict_ruodk_name(\"rock\", \"Submissions.foo_fighters\") # > \"foo_fighters_rock\" }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/prepend_uuid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepend a leading ","text":"","code":"prepend_uuid(md5hash)"},{"path":"https://docs.ropensci.org/ruODK/reference/prepend_uuid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepend a leading ","text":"md5hash string, e.g. md5 hash.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/prepend_uuid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepend a leading ","text":"string prepended \"uuid:\"","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/prepend_uuid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepend a leading ","text":"inverse helper function strip_uuid.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/prepend_uuid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepend a leading ","text":"","code":"if (FALSE) { prepend_uuid(\"1234\") prepend_uuid(\"d3bcefea-32a8-4dbc-80ca-4ecb0678e2b0\") }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/project_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new project. — project_create","text":"","code":"project_create(   name,   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw() )"},{"path":"https://docs.ropensci.org/ruODK/reference/project_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new project. — project_create","text":"name desired name project. Can contain whitespace. url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\").","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/project_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new project. — project_create","text":"tibble one row per project project metadata columns per ODK Central API docs.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/project_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new project. — project_create","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  p <- project_create(\"Test Project\") knitr::kable(p)  # project_create returns a tibble class(p) # > \"tbl_df\" \"tbl\" \"data.frame\"  # columns are project metadata names(p) # > \"id\" \"name\" \"archived\" }"},{"path":"https://docs.ropensci.org/ruODK/reference/project_detail.html","id":null,"dir":"Reference","previous_headings":"","what":"List all details of one project. — project_detail","title":"List all details of one project. — project_detail","text":"API endpoint return details one project, project_detail fail incorrect missing authentication.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/project_detail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all details of one project. — project_detail","text":"","code":"project_detail(   pid = get_default_pid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/project_detail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all details of one project. — project_detail","text":"pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/project_detail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all details of one project. — project_detail","text":"tibble exactly one row project project metadata columns per ODK Central API docs. Column names renamed ODK's camelCase snake_case. Values differ values returned ODK Central API: archived: FALSE (NULL) else TRUE dates: NA NULL","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/project_detail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all details of one project. — project_detail","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  pd <- project_detail()  pd %>%   dplyr::select(-\"verbs\") %>%   knitr::kable(.) }"},{"path":"https://docs.ropensci.org/ruODK/reference/project_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List all projects. — project_list","title":"List all projects. — project_list","text":"API endpoint return projects, project_list fail incorrect missing authentication.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/project_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all projects. — project_list","text":"","code":"project_list(   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries(),   orders = c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"),   tz = get_default_tz() )"},{"path":"https://docs.ropensci.org/ruODK/reference/project_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all projects. — project_list","text":"url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. orders (vector character) Orders datetime elements lubridate. Default: c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"). tz timezone convert dates times . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's timezone can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/project_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all projects. — project_list","text":"tibble one row per project project metadata columns per ODK Central API docs.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/project_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all projects. — project_list","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  pl <- project_list() knitr::kable(pl)  # project_list returns a tibble class(pl) # > \"tbl_df\" \"tbl\" \"data.frame\"  # columns are project metadata names(pl) # > \"id\" \"name\" \"forms\" \"app_users\" \"created_at\" \"updated_at\" # > \"last_submission\" \"archived\" }"},{"path":"https://docs.ropensci.org/ruODK/reference/ruODK-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ruODK: An R Client for the ODK Central API — ruODK-package","title":"ruODK: An R Client for the ODK Central API — ruODK-package","text":"ruODK R Client ODK Central API. Please see ruODK website full documentation: https://docs.ropensci.org/ruODK/ ruODK \"pipe-friendly\" re-exports \\%>\\% \\%||\\%, require use.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ruODK-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ruODK: An R Client for the ODK Central API — ruODK-package","text":"Maintainer: Florian W. Mayer Florian.Mayer@dbca.wa.gov.au (ORCID) contributors: Maëlle Salmon maelle.salmon@yahoo.se (ORCID) [reviewer] Karissa Whiting (ORCID) [reviewer] Jason Taylor [reviewer] Marcelo Tyszler (ORCID) [contributor] Hélène Langet (ORCID) [contributor] DBCA [copyright holder, funder] NWSFTCP [funder]","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_abort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rlang::abort() with a red error message with a cross symbol. — ru_msg_abort","text":"","code":"ru_msg_abort(message)"},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_abort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rlang::abort() with a red error message with a cross symbol. — ru_msg_abort","text":"message (chr) message print","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_abort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rlang::abort() with a red error message with a cross symbol. — ru_msg_abort","text":"","code":"if (FALSE) { ru_msg_abort(\"This is an error, abort.\") }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a blue info message with an info symbol. — ru_msg_info","text":"","code":"ru_msg_info(message, verbose = get_ru_verbose())"},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a blue info message with an info symbol. — ru_msg_info","text":"message (chr) message print verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a blue info message with an info symbol. — ru_msg_info","text":"","code":"ru_msg_info(\"This is an info message.\") #> NULL"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_noop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a green noop message with a filled circle symbol. — ru_msg_noop","text":"","code":"ru_msg_noop(message, verbose = get_ru_verbose())"},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_noop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a green noop message with a filled circle symbol. — ru_msg_noop","text":"message (chr) message print verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_noop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a green noop message with a filled circle symbol. — ru_msg_noop","text":"","code":"ru_msg_noop(\"This is a noop message.\") #> NULL"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_success.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a green success message with a tick symbol. — ru_msg_success","text":"","code":"ru_msg_success(message, verbose = get_ru_verbose())"},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_success.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a green success message with a tick symbol. — ru_msg_success","text":"message (chr) message print verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_success.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a green success message with a tick symbol. — ru_msg_success","text":"","code":"ru_msg_success(\"This is a success message.\") #> NULL"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_warn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rlang::warn() with a yellow warning message with a warning symbol. — ru_msg_warn","text":"","code":"ru_msg_warn(message, verbose = get_ru_verbose())"},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_warn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rlang::warn() with a yellow warning message with a warning symbol. — ru_msg_warn","text":"message (chr) message print verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_msg_warn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rlang::warn() with a yellow warning message with a warning symbol. — ru_msg_warn","text":"","code":"if (FALSE) { ru_msg_warn(\"This is a warning.\") }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set ruODK settings. — ru_settings","text":"","code":"ru_settings()  get_default_pid()  get_default_fid()  get_default_url()  get_default_un()  get_default_pw()  get_default_pp()  get_default_tz()  get_test_url()  get_test_un()  get_test_pw()  get_test_pid()  get_test_fid()  get_test_fid_zip()  get_test_fid_att()  get_test_fid_gap()  get_test_fid_wkt()  get_test_pp()  get_ru_verbose()  get_default_odkc_version()  get_test_odkc_version()  get_retries()"},{"path":"https://docs.ropensci.org/ruODK/reference/ru_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or set ruODK settings. — ru_settings","text":"ru_settings prints default ODK Central project ID, form ID, url, username, password, corresponding optional test server well verbosity HTTP request settings. ru_setup sets production test settings, get_(default/test)_* get respective settings.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or set ruODK settings. — ru_settings","text":"","code":"ru_settings() #> <ruODK settings> #>   Default ODK Central Project ID:   #>   Default ODK Central Form ID:   #>   Default ODK Central URL:   #>   Default ODK Central Username:   #>   Default ODK Central Password: run ruODK::get_default_pw() to show  #>   Default ODK Central Passphrase: run ruODK::get_default_pp() to show  #>   Default Time Zone: UTC  #>   Default ODK Central Version: 2023.4.0  #>   Default HTTP GET retries: 3  #>   Verbose messages: FALSE  #>   Test ODK Central Project ID:   #>   Test ODK Central Form ID:   #>   Test ODK Central Form ID (ZIP tests):   #>   Test ODK Central Form ID (Attachment tests):   #>   Test ODK Central Form ID (Parsing tests):   #>   Test ODK Central Form ID (WKT tests):   #>   Test ODK Central URL:   #>   Test ODK Central Username:   #>   Test ODK Central Password: run ruODK::get_test_pw() to show  #>   Test ODK Central Passphrase: run ruODK::get_test_pp() to show  #>   Test ODK Central Version: 2023.4.0"},{"path":"https://docs.ropensci.org/ruODK/reference/ru_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure default ruODK settings. — ru_setup","title":"Configure default ruODK settings. — ru_setup","text":"Settings returned invisibly additionally printed depending get_ru_verbose.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/ru_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure default ruODK settings. — ru_setup","text":"","code":"ru_setup(   svc = NULL,   pid = NULL,   fid = NULL,   url = NULL,   un = NULL,   pw = NULL,   pp = NULL,   tz = NULL,   odkc_version = NULL,   retries = NULL,   verbose = NULL,   test_svc = NULL,   test_pid = NULL,   test_fid = NULL,   test_fid_zip = NULL,   test_fid_att = NULL,   test_fid_gap = NULL,   test_fid_wkt = NULL,   test_url = NULL,   test_un = NULL,   test_pw = NULL,   test_pp = NULL,   test_odkc_version = NULL )"},{"path":"https://docs.ropensci.org/ruODK/reference/ru_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure default ruODK settings. — ru_setup","text":"svc (optional, character) OData service URL form. parameter set pid, fid, url. sufficient supply svc, un, pw. pid (optional, character) ID existing project url. override project ID svc. numeric value pid converted character. fid (optional, character) alphanumeric ID existing form pid. override form ID svc. url ODK Central URL, e.g. \"https://sandbox.central.getodk.org\". override ODK Central base URL svc. un ODK Central username email \"web user\" specified ODK Central instance url (optional, character). pw password user un (optional, character). pp passphrase (optional, character) encrypted form. tz Global default time zone. ruODK's time zone determined order precedence: Function parameter: e.g. odata_submission_get(tz = \"Australia/Perth\") ruODK setting: ru_setup(tz = \"Australia/Perth\") Environment variable RU_TIMEZONE (e.g. set .Renviron) UTC (GMT+00) odkc_version ODK Central version major/minor version, e.g. 1.1. retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. verbose Global default ruODK verbosity. ruODK verbosity determined order precedence: Function parameter: e.g. odata_submission_get(verbose = TRUE) ruODK setting: ru_setup(verbose = TRUE) Environment variable RU_VERBOSE (e.g. set .Renviron) FALSE. test_svc (optional, character) OData service URL test form. parameter set test_pid, test_fid, test_url. sufficient supply test_svc, test_un, test_pw configure testing. test_pid (optional, character) numeric ID existing project test_url. override project ID test_svc. numeric value test_pid converted character. test_fid (optional, character) alphanumeric ID existing form test_pid. override form ID test_svc. form used default form tests, examples, vignettes, data, Rmd templates. test_fid_zip (optional, character) alphanumeric ID existing form test_pid. override form ID test_svc. Provide form ID form submissions without attachments. form used test repeated download form submissions. test_fid_att (optional, character) alphanumeric ID existing form test_pid. override form ID test_svc. Provide form ID form submissions attachments. form used test downloading linking attachments. test_fid_gap (optional, character) alphanumeric ID existing form test_pid. override form ID test_svc. Provide form ID form gaps first submission. form used test parsing incomplete submissions. test_fid_wkt (optional, character) alphanumeric ID existing form test_pid. override form ID test_svc. Provide form ID form geopoints, geotraces, geoshapes. test_url (optional, character) valid ODK Central URL testing. override ODK Central base URL svc. test_un (optional, character) valid ODK Central username (email) privileged view test project(s) test_url. test_pw (optional, character) valid ODK Central password test_un. test_pp (optional, character) valid passphrase decrypt data encrypted project test_pid download, used tests. test_odkc_version ODK Central test server's version major/minor version, e.g. 1.1.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/ru_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure default ruODK settings. — ru_setup","text":"ru_setup sets ODK Central connection details. ruODK's functions default use default project ID, form ID, URL, username, password unless specified explicitly. parameters specified remain unchanged. therefore possible set username password initially ru_setup(un=\"XXX\", pw=\"XXX\"), switch forms ru_setup(svc=\"XXX\"), supplying form's OData service URL. ODK Central conveniently provides OData service URL form submission tab, turn contains base URL, project ID, form ID. ruODK's automated tests require valid ODK Central URL, privileged username password \"web user\" ODK Central instance, well existing project form.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/ru_setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure default ruODK settings. — ru_setup","text":"","code":"# `ruODK` users only need default settings to their ODK Central: ru_setup(url = \"https://my-odkc.com\", un = \"me@email.com\", pw = \"...\")  # `ruODK` contributors and maintainers need specific ODK Central # instances to run tests and build vignettes, see contributing guide: ru_setup(   url = \"https://odkcentral.dbca.wa.gov.au\",   un = \"me@email.com\",   pw = \"...\",   pp = \"...\",   test_url = \"https://sandbox.central.getodk.org\",   test_un = \"me@email.com\",   test_pw = \"...\",   test_pp = \"...\",   test_pid = 14,   test_fid = \"build_Flora-Quadrat-0-2_1558575936\",   test_fid_zip = \"build_Spotlighting-0-6_1558333698\",   test_fid_att = \"build_Flora-Quadrat-0-1_1558330379\",   test_fid_gap = \"build_Turtle-Track-or-Nest-1-0_1569907666\",   test_fid_wkt = \"build_Locations_1589344221\",   retries = 3,   verbose = TRUE ) #> <ruODK settings> #>   Default ODK Central Project ID:   #>   Default ODK Central Form ID:   #>   Default ODK Central URL: https://odkcentral.dbca.wa.gov.au  #>   Default ODK Central Username: me@email.com  #>   Default ODK Central Password: run ruODK::get_default_pw() to show  #>   Default ODK Central Passphrase: run ruODK::get_default_pp() to show  #>   Default Time Zone: UTC  #>   Default ODK Central Version: 2023.4.0  #>   Default HTTP GET retries: 3  #>   Verbose messages: TRUE  #>   Test ODK Central Project ID: 14  #>   Test ODK Central Form ID: build_Flora-Quadrat-0-2_1558575936  #>   Test ODK Central Form ID (ZIP tests): build_Spotlighting-0-6_1558333698  #>   Test ODK Central Form ID (Attachment tests): build_Flora-Quadrat-0-1_1558330379  #>   Test ODK Central Form ID (Parsing tests): build_Turtle-Track-or-Nest-1-0_1569907666  #>   Test ODK Central Form ID (WKT tests): build_Locations_1589344221  #>   Test ODK Central URL: https://sandbox.central.getodk.org  #>   Test ODK Central Username: me@email.com  #>   Test ODK Central Password: run ruODK::get_test_pw() to show  #>   Test ODK Central Passphrase: run ruODK::get_test_pp() to show  #>   Test ODK Central Version: 2023.4.0"},{"path":"https://docs.ropensci.org/ruODK/reference/semver_gt.html","id":null,"dir":"Reference","previous_headings":"","what":"Show whether a given semver is greater than a baseline version. — semver_gt","title":"Show whether a given semver is greater than a baseline version. — semver_gt","text":"Show whether given semver greater baseline version.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/semver_gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show whether a given semver is greater than a baseline version. — semver_gt","text":"","code":"semver_gt(sv = get_default_odkc_version(), to = \"1.5.0\")"},{"path":"https://docs.ropensci.org/ruODK/reference/semver_gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show whether a given semver is greater than a baseline version. — semver_gt","text":"sv semver compare character (\"2023.5.1\", \"1.5.0\", \"1.5\"), numeric (1.5). value always parsed semver::parse_semver(). Default: get_default_odkc_version(). semver compare string. Although semver can parse complete version strings, still parsed parse_odkc_version() ensure complete major, minor, patch version components.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/semver_gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show whether a given semver is greater than a baseline version. — semver_gt","text":"boolean indicating whether given semver sv greater baseline semver .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/semver_gt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show whether a given semver is greater than a baseline version. — semver_gt","text":"","code":"get_default_odkc_version() |> semver_gt(\"0.8.0\") #> [1] TRUE \"2024.1.1\" |>   parse_odkc_version() |>   semver_gt(\"2024.1.0\") #> [1] TRUE \"2024.1.1\" |>   parse_odkc_version() |>   semver_gt(\"2024.1.1\") #> [1] FALSE \"2024.1.1\" |>   parse_odkc_version() |>   semver_gt(\"2024.1.2\") #> [1] FALSE"},{"path":"https://docs.ropensci.org/ruODK/reference/semver_lt.html","id":null,"dir":"Reference","previous_headings":"","what":"Show whether a given semver is lesser than a baseline version. — semver_lt","title":"Show whether a given semver is lesser than a baseline version. — semver_lt","text":"Show whether given semver lesser baseline version.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/semver_lt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show whether a given semver is lesser than a baseline version. — semver_lt","text":"","code":"semver_lt(sv = get_default_odkc_version(), to = \"1.5.0\")"},{"path":"https://docs.ropensci.org/ruODK/reference/semver_lt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show whether a given semver is lesser than a baseline version. — semver_lt","text":"sv semver compare character (\"2023.5.1\", \"1.5.0\", \"1.5\"), numeric (1.5). value always parsed semver::parse_semver(). Default: get_default_odkc_version(). semver compare string. Although semver can parse complete version strings, still parsed parse_odkc_version() ensure complete major, minor, patch version components.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/semver_lt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show whether a given semver is lesser than a baseline version. — semver_lt","text":"boolean indicating whether given semver sv greater baseline semver .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/semver_lt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show whether a given semver is lesser than a baseline version. — semver_lt","text":"","code":"get_default_odkc_version() |> semver_lt(\"0.8.0\") #> [1] FALSE \"2024.1.1\" |>   parse_odkc_version() |>   semver_lt(\"2024.1.0\") #> [1] FALSE \"2024.1.1\" |>   parse_odkc_version() |>   semver_lt(\"2024.1.1\") #> [1] FALSE \"2024.1.1\" |>   parse_odkc_version() |>   semver_lt(\"2024.1.2\") #> [1] TRUE"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/split_geopoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a dataframe containing a geopoint column with lon, lat, alt. — split_geopoint","text":"","code":"split_geopoint(data, colname, wkt = FALSE)"},{"path":"https://docs.ropensci.org/ruODK/reference/split_geopoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a dataframe containing a geopoint column with lon, lat, alt. — split_geopoint","text":"data (dataframe) dataframe geopoint column. colname (chr) name geopoint column. column retained. wkt Whether geofields GeoJSON (FALSE) WKT strings (TRUE), default: FALSE.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/split_geopoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate a dataframe containing a geopoint column with lon, lat, alt. — split_geopoint","text":"given dataframe WKT POINT column colname, plus three new columns, colname_longitude, colname_latitude, colname_altitude. three new columns prefixed original colname avoid naming conflicts geopoint columns.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/split_geopoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annotate a dataframe containing a geopoint column with lon, lat, alt. — split_geopoint","text":"function used handle_ru_geopoints geopoint fields per form_schema.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/split_geopoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate a dataframe containing a geopoint column with lon, lat, alt. — split_geopoint","text":"","code":"if (FALSE) { df_wkt <- tibble::tibble(   stuff = c(\"asd\", \"sdf\", \"sdf\"),   loc = c(     \"POINT (115.99 -32.12 20.01)\",     \"POINT (116.12 -33.34 15.23)\",     \"POINT (114.01 -31.56 23.56)\"   ) ) df_wkt_split <- df |> split_geopoint(\"loc\", wkt = TRUE) testthat::expect_equal(   names(df_wkt_split),   c(\"stuff\", \"loc\", \"loc_longitude\", \"loc_latitude\", \"loc_altitude\") )  # With package data data(\"geo_fs\") data(\"geo_wkt_raw\") data(\"geo_gj_raw\")  # Find variable names of geopoints geo_fields <- geo_fs |>   dplyr::filter(type == \"geopoint\") |>   magrittr::extract2(\"ruodk_name\") geo_fields[1] # First geotrace in data: point_location_point_gps  # Rectangle but don't parse submission data (GeoJSON and WKT) geo_gj_rt <- geo_gj_raw |>   odata_submission_rectangle(form_schema = geo_fs) geo_wkt_rt <- geo_wkt_raw |>   odata_submission_rectangle(form_schema = geo_fs)  # Data with first geopoint split gj_first_gt <- split_geopoint(geo_gj_rt, geo_fields[1], wkt = FALSE) gj_first_gt$point_location_point_gps_longitude  wkt_first_gt <- split_geopoint(geo_wkt_rt, geo_fields[1], wkt = TRUE) wkt_first_gt$point_location_point_gps_longitude }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/split_geoshape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a dataframe containing a geoshape column with lon, lat, alt of the\ngeotrace's first point. — split_geoshape","text":"","code":"split_geoshape(   data,   colname,   wkt = FALSE,   odkc_version = get_default_odkc_version() )"},{"path":"https://docs.ropensci.org/ruODK/reference/split_geoshape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a dataframe containing a geoshape column with lon, lat, alt of the\ngeotrace's first point. — split_geoshape","text":"data (dataframe) dataframe geoshape column. colname (chr) name geoshape column. column retained. wkt Whether geofields GeoJSON (FALSE) WKT strings (TRUE), default: FALSE. odkc_version ODK Central version semantic version string (year.minor.patch), e.g. \"2023.5.1\". version shown ODK Central's version page /version.txt. Discard \"v\". ruODK uses parameter adjust breaking changes ODK Central. Default: get_default_odkc_version \"2023.5.1\" unset. Set default get_default_odkc_version ru_setup(odkc_version=\"2023.5.1\"). See vignette(\"Setup\", package = \"ruODK\").","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/split_geoshape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate a dataframe containing a geoshape column with lon, lat, alt of the\ngeotrace's first point. — split_geoshape","text":"given dataframe geoshape column colname, plus three new columns, colname_longitude, colname_latitude, colname_altitude. three new columns prefixed original colname avoid naming conflicts geoshape columns.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/split_geoshape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annotate a dataframe containing a geoshape column with lon, lat, alt of the\ngeotrace's first point. — split_geoshape","text":"function used handle_ru_geopoints geopoint fields per form_schema.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/split_geoshape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate a dataframe containing a geoshape column with lon, lat, alt of the\ngeotrace's first point. — split_geoshape","text":"","code":"if (FALSE) { library(magrittr) data(\"geo_fs\") data(\"geo_wkt_raw\") data(\"geo_gj_raw\")  # Find variable names of geoshapes geo_fields <- geo_fs %>%   dplyr::filter(type == \"geoshape\") %>%   magrittr::extract2(\"ruodk_name\") geo_fields[1] # First geoshape in data: shape_location_shape_gps  # Rectangle but don't parse submission data (GeoJSON and WKT) geo_gj_rt <- geo_gj_raw %>%   odata_submission_rectangle(form_schema = geo_fs) geo_wkt_rt <- geo_wkt_raw %>%   odata_submission_rectangle(form_schema = geo_fs)  # Data with first geoshape split gj_first_gt <- split_geoshape(geo_gj_rt, geo_fields[1], wkt = FALSE) cn_gj <- names(gj_first_gt) testthat::expect_true(\"shape_location_shape_gps_longitude\" %in% cn_gj) testthat::expect_true(\"shape_location_shape_gps_latitude\" %in% cn_gj) testthat::expect_true(\"shape_location_shape_gps_altitude\" %in% cn_gj) testthat::expect_true(   is.numeric(gj_first_gt$shape_location_shape_gps_longitude) ) testthat::expect_true(   is.numeric(gj_first_gt$shape_location_shape_gps_latitude) ) testthat::expect_true(   is.numeric(gj_first_gt$shape_location_shape_gps_altitude) )  wkt_first_gt <- split_geoshape(geo_wkt_rt, geo_fields[1], wkt = TRUE) cn_wkt <- names(wkt_first_gt) testthat::expect_true(\"shape_location_shape_gps_longitude\" %in% cn_wkt) testthat::expect_true(\"shape_location_shape_gps_latitude\" %in% cn_wkt) testthat::expect_true(\"shape_location_shape_gps_altitude\" %in% cn_wkt) testthat::expect_true(   is.numeric(wkt_first_gt$shape_location_shape_gps_longitude) ) testthat::expect_true(   is.numeric(wkt_first_gt$shape_location_shape_gps_latitude) ) testthat::expect_true(   is.numeric(wkt_first_gt$shape_location_shape_gps_altitude) ) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/split_geotrace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a dataframe containing a geotrace column with lon, lat, alt of the\ngeotrace's first point. — split_geotrace","text":"","code":"split_geotrace(   data,   colname,   wkt = FALSE,   odkc_version = get_default_odkc_version() )"},{"path":"https://docs.ropensci.org/ruODK/reference/split_geotrace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a dataframe containing a geotrace column with lon, lat, alt of the\ngeotrace's first point. — split_geotrace","text":"data (dataframe) dataframe geotrace column. colname (chr) name geotrace column. column retained. wkt Whether geofields GeoJSON (FALSE) WKT strings (TRUE), default: FALSE. odkc_version ODK Central version semantic version string (year.minor.patch), e.g. \"2023.5.1\". version shown ODK Central's version page /version.txt. Discard \"v\". ruODK uses parameter adjust breaking changes ODK Central. Default: get_default_odkc_version \"2023.5.1\" unset. Set default get_default_odkc_version ru_setup(odkc_version=\"2023.5.1\"). See vignette(\"Setup\", package = \"ruODK\").","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/split_geotrace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate a dataframe containing a geotrace column with lon, lat, alt of the\ngeotrace's first point. — split_geotrace","text":"given dataframe geotrace column colname, plus three new columns, colname_longitude, colname_latitude, colname_altitude. three new columns prefixed original colname avoid naming conflicts geotrace columns.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/split_geotrace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annotate a dataframe containing a geotrace column with lon, lat, alt of the\ngeotrace's first point. — split_geotrace","text":"function used handle_ru_geopoints geopoint fields per form_schema. format geotrace (GeoJSON, WKT, ODK Linestring) determined via parameters wkt odkc_version, rather inferred class column. ODK Linestrings character vectors without leading \"LINESTRING (\", WKT character vectors leading \"LINESTRING (\", GeoJSON list columns.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/split_geotrace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate a dataframe containing a geotrace column with lon, lat, alt of the\ngeotrace's first point. — split_geotrace","text":"","code":"if (FALSE) { library(magrittr) data(\"geo_fs\") data(\"geo_wkt_raw\") data(\"geo_gj_raw\")  # Find variable names of geotraces geo_fields <- geo_fs %>%   dplyr::filter(type == \"geotrace\") %>%   magrittr::extract2(\"ruodk_name\") geo_fields[1] # First geotrace in data: path_location_path_gps  # Rectangle but don't parse submission data (GeoJSON and WKT) geo_gj_rt <- geo_gj_raw %>%   odata_submission_rectangle(form_schema = geo_fs) geo_wkt_rt <- geo_wkt_raw %>%   odata_submission_rectangle(form_schema = geo_fs)  # Data with first geotrace split gj_first_gt <- split_geotrace(geo_gj_rt, geo_fields[1], wkt = FALSE) testthat::expect_true(   \"path_location_path_gps_longitude\" %in% names(gj_first_gt) ) testthat::expect_true(   \"path_location_path_gps_latitude\" %in% names(gj_first_gt) ) testthat::expect_true(   \"path_location_path_gps_altitude\" %in% names(gj_first_gt) ) testthat::expect_true(   is.numeric(gj_first_gt$path_location_path_gps_longitude) ) testthat::expect_true(   is.numeric(gj_first_gt$path_location_path_gps_latitude) ) testthat::expect_true(   is.numeric(gj_first_gt$path_location_path_gps_altitude) )  wkt_first_gt <- split_geotrace(geo_wkt_rt, geo_fields[1], wkt = TRUE) testthat::expect_true(   \"path_location_path_gps_longitude\" %in% names(wkt_first_gt) ) testthat::expect_true(   \"path_location_path_gps_latitude\" %in% names(wkt_first_gt) ) testthat::expect_true(   \"path_location_path_gps_altitude\" %in% names(wkt_first_gt) ) testthat::expect_true(   is.numeric(wkt_first_gt$path_location_path_gps_longitude) ) testthat::expect_true(   is.numeric(wkt_first_gt$path_location_path_gps_latitude) ) testthat::expect_true(   is.numeric(wkt_first_gt$path_location_path_gps_altitude) ) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/strip_uuid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip the leading ","text":"","code":"strip_uuid(uuid)"},{"path":"https://docs.ropensci.org/ruODK/reference/strip_uuid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip the leading ","text":"uuid string may contain number \"uuid:\"","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/strip_uuid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strip the leading ","text":"string every occurrence \"uuid:\" deleted.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/strip_uuid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strip the leading ","text":"helper function used attachment_get.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/strip_uuid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strip the leading ","text":"","code":"if (FALSE) { strip_uuid(\"uuid:1234\") strip_uuid(\"uuid:d3bcefea-32a8-4dbc-80ca-4ecb0678e2b0\") }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/submission_audit_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get submission audits for a list of submission instance IDs. — submission_audit_get","text":"","code":"submission_audit_get(   iid,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/submission_audit_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get submission audits for a list of submission instance IDs. — submission_audit_get","text":"iid list submission instance IDs, e.g. submission_list$instance_id. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_audit_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get submission audits for a list of submission instance IDs. — submission_audit_get","text":"nested list submission audit logs.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_audit_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get submission audits for a list of submission instance IDs. — submission_audit_get","text":"Uses get_one_submission_audit list submission instance IDs (iid) returned submission_list$instance_id. giving list iid download explicitly, list can modified using information accessible ruODK, e.g. iid can restricted \"already downloaded submissions\". get combined submission audit logs one form one single, concatenated audit.csv file, use submission_export.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/submission_audit_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get submission audits for a list of submission instance IDs. — submission_audit_get","text":"","code":"if (FALSE) { # Step 1: Setup ruODK with OData Service URL (has url, pid, fid) ruODK::ru_setup(svc = \"...\")  # Step 2: List all submissions of form sl <- submission_list()  # Step 3: Get submission audit logs sa <- submission_audit_get(sl$instance_id) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/submission_detail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show metadata for one submission. — submission_detail","text":"","code":"submission_detail(   iid,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/submission_detail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show metadata for one submission. — submission_detail","text":"iid instance_id, UUID, returned submission_list. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_detail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show metadata for one submission. — submission_detail","text":"nested list submission metadata.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/submission_detail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show metadata for one submission. — submission_detail","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  sl <- submission_list()  sub <- submission_detail(sl$instance_id[[1]])  # The details for one submission return exactly one row nrow(sub) # > 1  # The columns are metadata about the submission and the submitter names(sub) # > \"instance_id\" \"submitter_id\" \"submitter_type\" \"submitter_display_name\" # > \"submitter_created_at\" \"device_id\" \"created_at\" }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/submission_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export all form submissions including repeats and attachments to CSV. — submission_export","text":"","code":"submission_export(   local_dir = here::here(),   overwrite = TRUE,   media = TRUE,   repeats = TRUE,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   pp = get_default_pp(),   retries = get_retries(),   odkc_version = get_default_odkc_version(),   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/submission_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export all form submissions including repeats and attachments to CSV. — submission_export","text":"local_dir local folder save downloaded files , default: ::. overwrite Whether overwrite previously downloaded zip files, default: FALSE media Whether include media attachments, default: TRUE. feature effect ODK Central v1.1 higher. Setting feature FALSE odkc_version < 1.1 display verbose noop message, still return media attachments. repeats Whether include repeat data (TRUE), whether return root table (FALSE). Default: TRUE. Requesting repeats=FALSE also omit media, override parameter media. Setting feature FALSE odkc_version < 1.1 display verbose noop message, still include repeat data. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pp passphrase encrypted form. Default: NULL. Passphrases can stored e.g. environment variables. See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. odkc_version ODK Central version semantic version string (year.minor.patch), e.g. \"2023.5.1\". version shown ODK Central's version page /version.txt. Discard \"v\". ruODK uses parameter adjust breaking changes ODK Central. Default: get_default_odkc_version \"2023.5.1\" unset. Set default get_default_odkc_version ru_setup(odkc_version=\"2023.5.1\"). See vignette(\"Setup\", package = \"ruODK\"). verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export all form submissions including repeats and attachments to CSV. — submission_export","text":"absolute path exported ZIP file named form ID. exported ZIP file extension .zip unless root table requested (repeats=FALSE), case exported file extension .csv. contrast ODK Central, exports submissions.csv(.zip), exported ZIP file named form avoid accidentally overwriting ZIP export another form.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_export.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export all form submissions including repeats and attachments to CSV. — submission_export","text":"function exports Submission data associated Form one zip file containing one CSV files, well multimedia attachments associated included Submissions. incremental download subset submissions, use submission_list odata_submission_get filter queries.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_export.html","id":"contents","dir":"Reference","previous_headings":"","what":"Contents","title":"Export all form submissions including repeats and attachments to CSV. — submission_export","text":"inclusion subtables (repeating form groups) can toggled repeats, whereas inclusion media attachments can toggled media.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_export.html","id":"download-location","dir":"Reference","previous_headings":"","what":"Download location","title":"Export all form submissions including repeats and attachments to CSV. — submission_export","text":"file downloaded project root unless specified otherwise (via local_dir). Subsequently, zip file can extracted. Attachment filenames (e.g. \"12345.jpg\") prepended media (resulting e.g. media/12345.jpg) order represent relative path actual attachment file (extracted zip file).","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_export.html","id":"encryption","dir":"Reference","previous_headings":"","what":"Encryption","title":"Export all form submissions including repeats and attachments to CSV. — submission_export","text":"ODK Central supports two modes encryption - learn . ruODK supports project managed encryption, however support limited exactly one encryption key. supplied passphrase used first returned encryption key. Remaining encryption keys ignored ruODK. incorrect passphrase given, request terminated immediately. reported multiple requests incorrect passphrases can crash ODK Central.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/submission_export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export all form submissions including repeats and attachments to CSV. — submission_export","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  se <- submission_export()  # Unzip and inspect the loot t <- tempdir() f <- unzip(se, exdir = t) fs::dir_ls(t) fid <- get_test_fid() sub <- fs::path(t, glue::glue(\"{fid}.csv\")) %>% readr::read_csv() sub %>% knitr::kable(.) }"},{"path":"https://docs.ropensci.org/ruODK/reference/submission_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get submissions for a list of submission instance IDs. — submission_get","title":"Get submissions for a list of submission instance IDs. — submission_get","text":"Uses get_one_submission list submission instance IDs (iid) returned submission_list$instance_id. giving list iid download explicitly, list can modified using information accessible ruODK, e.g. iid can restricted \"already downloaded submissions\".","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get submissions for a list of submission instance IDs. — submission_get","text":"","code":"submission_get(   iid,   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries() )"},{"path":"https://docs.ropensci.org/ruODK/reference/submission_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get submissions for a list of submission instance IDs. — submission_get","text":"iid list submission instance IDs, e.g. submission_list$instance_id. pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get submissions for a list of submission instance IDs. — submission_get","text":"nested list submission data.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get submissions for a list of submission instance IDs. — submission_get","text":"Forms submission audit enabled also receive submission audit audit.csv. overwrite previous audit.csv files. get combined submission audit logs one single, concatenated audit.csv file, use submission_export. Note submission audit different server audit. submission audit logs actions enumerator ODK Collect, whereas form audit logs actions project manager ODK Central.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/submission_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get submissions for a list of submission instance IDs. — submission_get","text":"","code":"if (FALSE) { # Step 1: Setup ruODK with OData Service URL (has url, pid, fid) ruODK::ru_setup(svc = \"...\")  # Step 2: List all submissions of form sl <- submission_list()  # Step 3: Get submissions subs <- submission_get(sl$instance_id) }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/submission_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all submissions of one form. — submission_list","text":"","code":"submission_list(   pid = get_default_pid(),   fid = get_default_fid(),   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries(),   orders = c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"),   tz = get_default_tz() )"},{"path":"https://docs.ropensci.org/ruODK/reference/submission_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all submissions of one form. — submission_list","text":"pid numeric ID project, e.g.: 2. Default: get_default_pid. Set default pid ru_setup(pid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). fid alphanumeric form ID, e.g. \"build_Spotlighting-0-8_1559885147\". Default: get_default_fid. Set default fid ru_setup(fid=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. orders (vector character) Orders datetime elements lubridate. Default: c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"). tz timezone convert dates times . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's timezone can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/submission_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all submissions of one form. — submission_list","text":"tibble containing high-level details form submissions. One row per submission, columns submission attributes:","code":"* instance_id: uuid, string. The unique ID for each submission.     * submitter_id: user ID, integer.     * created_at: time of submission upload, dttm     * updated_at: time of submission update on server, dttm or NA"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/submission_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all submissions of one form. — submission_list","text":"","code":"if (FALSE) { # Set default credentials, see vignette(\"setup\") ruODK::ru_setup(   svc = ...,   un = \"me@email.com\",   pw = \"...\" )  sl <- submission_list() sl %>% knitr::kable(.)  fl <- form_list()  # submission_list returns a tibble class(sl) # > c(\"tbl_df\", \"tbl\", \"data.frame\")  # Submission attributes are the tibble's columns names(sl) # > \"instance_id\" \"submitter_id\" \"device_id\" \"created_at\" \"updated_at\"  # Number of submissions (rows) is same as advertised in form_list form_list_nsub <- fl %>%   filter(fid == get_test_fid()) %>%   magrittr::extract2(\"submissions\") %>%   as.numeric() nrow(sl) == form_list_nsub # > TRUE }"},{"path":"https://docs.ropensci.org/ruODK/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"functions provide tidy eval-compatible ways capture symbols (sym(), syms(), ensym()), expressions (expr(), exprs(), enexpr()), quosures (quo(), quos(), enquo()). learn tidy eval use tools, read http://rlang.tidyverse.org/articles/tidy-evaluation.html","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/unnest_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively unnest_wide all list columns in a tibble. — unnest_all","text":"","code":"unnest_all(   nested_tbl,   names_repair = \"universal\",   names_sep = \"_\",   form_schema = NULL,   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/unnest_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively unnest_wide all list columns in a tibble. — unnest_all","text":"nested_tbl nested tibble names_repair argument names_repair tidyr::unnest_wider, default: \"universal\". names_sep argument names_sep tidyr::unnest_wider, default: \"_\". Un-nested variables inside list column prefixed list column name, separated names_sep. avoids unsightly repaired names latitude...1. Set NULL disable prefixing. form_schema optional form_schema, like output form_schema. form schema supplied, location fields unnested. WKT location fields contain plain text never unnested, GeoJSON location fields cause errors unnesting. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/unnest_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively unnest_wide all list columns in a tibble. — unnest_all","text":"un-nested tibble wide format","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/unnest_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recursively unnest_wide all list columns in a tibble. — unnest_all","text":"odata_submission_rectangle uses function internally. Interested users can use function break ruODK's automated steps smaller components. quite verbose output tidyr::unnest_wider captured hidden user.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/user_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all users. — user_list","text":"","code":"user_list(   qry = NULL,   url = get_default_url(),   un = get_default_un(),   pw = get_default_pw(),   retries = get_retries(),   orders = c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"),   tz = get_default_tz(),   verbose = get_ru_verbose() )"},{"path":"https://docs.ropensci.org/ruODK/reference/user_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all users. — user_list","text":"qry query string filter users . query string case sensitive can contain special characters, @. query string must least 5 alphabetic characters long return good enough matches. E.g. janet match user display name Janette Doe. E.g., @dbca.wa match users email dbca.wa.gov.au, whereas @dbca.w @dbca return matches. Default: NULL. url ODK Central base URL without trailing slash. Default: get_default_url. Set default url ru_setup(url=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). un ODK Central username (email address). Default: get_default_un. Set default un ru_setup(un=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). pw ODK Central password. Default: get_default_pw. Set default pw ru_setup(pw=\"...\"). See vignette(\"Setup\", package = \"ruODK\"). retries number attempts retrieve web resource. parameter given RETRY(times = retries). Default: 3. orders (vector character) Orders datetime elements lubridate. Default: c(\"YmdHMS\", \"YmdHMSz\", \"Ymd HMS\", \"Ymd HMSz\", \"Ymd\", \"ymd\"). tz timezone convert dates times . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's timezone can set globally per function. verbose Whether display debug messages . Read vignette(\"setup\", package = \"ruODK\") learn ruODK's verbosity can set globally per function.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/user_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all users. — user_list","text":"tibble user details per ODK Central API docs.","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/user_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List all users. — user_list","text":"Currently, paging filtering options, listing Users get every User system, every time. Optionally, q query string parameter may provided filter returned users given string. search performed via trigram similarity index Email Display Name fields, results ordered match score, best matches first. q parameter given, exactly matches email address exists system, user's details always returned, even actors user.list. request must still authenticate valid Actor. allows non-Administrators choose user action (e.g. grant rights) without allowing full search. Actors user.list always receive [] 200 OK response. ruODK (yet) warn case, (requesting Actor) permission user.list.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/user_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all users. — user_list","text":"","code":"if (FALSE) { # See vignette(\"setup\") for setup and authentication options # ruODK::ru_setup(svc = \"....svc\", un = \"me@email.com\", pw = \"...\")  # All users ul <- user_list()  # Search users # Given a user with display name \"Janette Doe\" and email \"@org.com.au\" user_list(qry = \"jan\") # no results, query string too short user_list(qry = \"jane\") # no results, query string too short user_list(qry = \"janet\") # returns Janette user_list(qry = \"@org\") # no results, query string too short user_list(qry = \"@org.c\") # no results, query string too short user_list(qry = \"@org.co\") # returns all users matching \"@org.co\"  # Actor not allowed to user.list user_list() # If this is empty, you might not have permissions to list users }"},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/yell_if_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warn about failed web requests and give helpful troubleshooting tips. — yell_if_error","text":"","code":"yell_if_error(response, url, un, pw, pid = NULL, fid = NULL)"},{"path":"https://docs.ropensci.org/ruODK/reference/yell_if_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warn about failed web requests and give helpful troubleshooting tips. — yell_if_error","text":"response httr response object url URL (character) un username (character) pw password (character) pid project ID (numeric, optional) fid form ID (character, optional)","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/yell_if_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Warn about failed web requests and give helpful troubleshooting tips. — yell_if_error","text":"response object","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/yell_if_error.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Warn about failed web requests and give helpful troubleshooting tips. — yell_if_error","text":"wrapper around httr::stop_for_status helpful error message. Examples: see tests project_list. function used internally may useful debugging ruODK development.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/yell_if_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abort on missing ODK Central credentials (url, username, password). — yell_if_missing","text":"","code":"yell_if_missing(url, un, pw, pid = NULL, fid = NULL, iid = NULL)"},{"path":"https://docs.ropensci.org/ruODK/reference/yell_if_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abort on missing ODK Central credentials (url, username, password). — yell_if_missing","text":"url URL (character) un username (character) pw password (character) pid project ID (numeric, optional) fid form ID (character, optional) iid submission instance ID (character, optional)","code":""},{"path":"https://docs.ropensci.org/ruODK/reference/yell_if_missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abort on missing ODK Central credentials (url, username, password). — yell_if_missing","text":"helper function pat ruODK functions missing credentials stop loud informative yell.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/reference/yell_if_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abort on missing ODK Central credentials (url, username, password). — yell_if_missing","text":"","code":"testthat::expect_error(yell_if_missing(\"\", \"username\", \"password\")) testthat::expect_error(yell_if_missing(\"url\", \"\", \"password\")) testthat::expect_error(yell_if_missing(\"url\", \"username\", \"\")) testthat::expect_error(yell_if_missing(NULL, \"\", \"\")) testthat::expect_error(yell_if_missing(\"\", \"\", \"\")) testthat::expect_error(yell_if_missing(\"\", \"\", \"\", \"\")) testthat::expect_error(yell_if_missing(\"\", \"\", \"\", \"\", \"\")) testthat::expect_error(yell_if_missing(\"\", \"\", \"\", \"\", \"\", \"\"))"},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-142","dir":"Changelog","previous_headings":"","what":"ruODK 1.4.2","title":"ruODK 1.4.2","text":"release migrates ruODK test suite new test server ruodk.getodk.cloud generously sponsored GetODK. release makes ruODK aware new ODK Central semantic version format: Update ODK Central version .Renviron credential helper choice new format ODKC_VERSION=\"2023.5.1\" (current version). See updated vignette “setup”.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-changes-1-4-2","dir":"Changelog","previous_headings":"","what":"Major changes","title":"ruODK 1.4.2","text":"Handle new ODK Central semantic versioning (#150) Migrate new test server (#149)","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-140","dir":"Changelog","previous_headings":"","what":"ruODK 1.4.0","title":"ruODK 1.4.0","text":"release fixes compatibility issues bumps dependencies R (4.1) imported/suggested packages. Upgrade carefully revert 1.3.12 things go awry. Update new tidyselect syntax: Using vectors names select makes tidyselect complain (WARN, soon ERROR). wrap programmatic selections variable names dplyr::all_of() expect single variable selected, dplyr::any_of() select using fuzzy matching (e.g. dplyr::starts_with()). (#146) Make ruODK::form_list() robust reviewState missing outdated Central versions. (#145, HT @dpagendam #143, HT @collinschwantes) tripwires - please submit bug report find discrepancy Central API ruODK’s parsing.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-1311","dir":"Changelog","previous_headings":"","what":"ruODK 1.3.11","title":"ruODK 1.3.11","text":"Update project_list, submission_list `` columns reflect Central 1.5 API output. Update submission_list columns reflect Central 1.5 API output.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"minor-fixes-1-3-7","dir":"Changelog","previous_headings":"","what":"Minor fixes","title":"ruODK 1.3.7","text":"Improve issue template bug reports Upgrade test server ODK Central 1.4.2 Refresh packaged data (new Central brings new fields), update tests Improve GitHub Action Docker build","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"minor-fixes-1-3-6","dir":"Changelog","previous_headings":"","what":"Minor fixes","title":"ruODK 1.3.6","text":"odata_submission_get supports parameter expand expand repeat repetitions.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"minor-fixes-1-3-5","dir":"Changelog","previous_headings":"","what":"Minor fixes","title":"ruODK 1.3.5","text":"split_geopoint now robust NULL columns. split_geotrace split_geoshape possibly affected. ## Data Packaged data re-created represent latest server outputs. ## Maintenance New Suggest depencency terra (mapview)","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-130","dir":"Changelog","previous_headings":"","what":"ruODK 1.3.0","title":"ruODK 1.3.0","text":"release supports ODK Central 1.3.0 represents -due version bump reflect supported ODK Central version. test server now updated ODK Central 1.3.0, tests pass. still newer yet unsupported API endpoints ODK Central, serve administrative purposes front-end. Contributions welcome, get started issues contributing guide. ruODK focuses data retrieval, administrative endpoints non-critical ruODK’s purpose.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"data-1-3-0","dir":"Changelog","previous_headings":"","what":"Data","title":"ruODK 1.3.0","text":"Packaged data re-created represent latest server outputs. ## Maintenance tests pass, GitHub Actions per usual brittle installation step.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-1200000","dir":"Changelog","previous_headings":"","what":"ruODK 1.2.0.0000","title":"ruODK 1.2.0.0000","text":"shaping release targetting ODK Central 1.2 release. ODK Central undergoing bug fixes patches, ruODK’s test server migrated another instance. latter required enable tests create/update/delete entities ODK Central.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"maintenance-1-2-0-0000","dir":"Changelog","previous_headings":"","what":"Maintenance","title":"ruODK 1.2.0.0000","text":"DEPENDS SUGGESTS bumped latest available R release. minimum supported version rversions::r_oldrel(): 4.0.5 (2021-03-31). ruODK developed rversions::r_release(): 4.1.1 (2021-08-10).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-fixes-1-2-0","dir":"Changelog","previous_headings":"","what":"Major fixes","title":"ruODK 1.2.0","text":"ODK Central returns Geoshapes Multipolygon. split_geoshape adjusted odkce_version >= 1.2. (#131) readr::parse_datetime stopped supporting timezone “Z”. (#130) ## Minor fixes ## Documentation ## Data data refreshed test server running ODK Central 1.2. ## Maintenance","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"documentation-0-10-2","dir":"Changelog","previous_headings":"","what":"Documentation","title":"ruODK 0.10.2","text":"Update installation instructions source install rOpenSci R-Universe troubleshooting (#128, thanks @yanokwa) ## Data ## Maintenance","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-fixes-0-10-2-1","dir":"Changelog","previous_headings":"","what":"Major fixes","title":"ruODK 0.10.2","text":"Fix ODK Central v1.2 time NULL query parameters skip top. ruODK now supplies non-NULL query parameters additional seat-belt drop query parameter empty string. (#126, thanks @yanokwa, @mtyszler, @thaliehln) ## Minor fixes ## Documentation ## Data ## Maintenance","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-fixes-0-10-1","dir":"Changelog","previous_headings":"","what":"Major fixes","title":"ruODK 0.10.1","text":"submission_export now terminates immediately incorrect passphrase given. ODK Central can exceed memory limits submission_export run repeatedly incorrect passphrase. (#30, thanks @Thaliehln) ## Minor fixes Add encryption_key_list ## Documentation ## Data ## Maintenance","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"minor-fixes-0-10-0","dir":"Changelog","previous_headings":"","what":"Minor fixes","title":"ruODK 0.10.0","text":"Make ru_msg_* conditional get_ru_verbose(). ## Documentation Reference re-ordered topics. Re-worded example preamble setup. Added metadata pkgdown config. Enable Markdown docs. Embedded lifecycle badges work. R CMD Check complain nice. ## Data ## Maintenance Prepare cover remaining API endpoints.","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"minor-fixes-0-9-11","dir":"Changelog","previous_headings":"","what":"Minor fixes","title":"ruODK 0.9.11","text":"Add published_at form_list form_detail, update examples, tests, test fixtures show draft forms can detected NA published_at ODK Central versions form drafts, NA hash version ODK Central versions form drafts. ## Documentation ## Data ## Maintenance","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-0910","dir":"Changelog","previous_headings":"","what":"ruODK 0.9.10","title":"ruODK 0.9.10","text":"“everything far works” release. ODK Central API endpoints waiting implemented still.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"minor-fixes-0-9-10","dir":"Changelog","previous_headings":"","what":"Minor fixes","title":"ruODK 0.9.10","text":"Default ODK Central version bumped current release (1.1) ## Documentation PDF manual updated Welcoming new contributors Marcelo (@mtyszler) Hélène (@Thaliehln) ## Data ## Maintenance Updated Zenodo archive https://zenodo.org/record/4609910 Updated Docker image https://hub.docker.com/u/dbcawa/ruodk (RStudio server ruODK)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-fixes-0-9-9","dir":"Changelog","previous_headings":"","what":"Major fixes","title":"ruODK 0.9.9","text":"submission_export now supports ODK Central v1.1 features omit media attachments (media = FALSE), omit repeat data (include_repeats=FALSE). Calling submission_export older version ODK Central (determined get_default_odkc_version()) new parameters emit (verbose ) “noop” message act . ## Minor fixes Bugfix submission_export encrypted forms multiple encryption keys. (Thanks @Thaliehln #117 #30)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"minor-fixes-0-9-8","dir":"Changelog","previous_headings":"","what":"Minor fixes","title":"ruODK 0.9.8","text":"Add support passphrase ru_setup family (#116)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-fixes-0-9-7","dir":"Changelog","previous_headings":"","what":"Major fixes","title":"ruODK 0.9.7","text":"odata_submission_get() bugfix: handle_ru_attachments() now finds downloads media attachments main submissions nested form groups. (#114) odata_submission_get() bugfix: missing media attachments (due upload error ODK Collect ODK Central) tolerated without interrupting batch download. diagnostic warning message emitted failed download. (#114) ## Minor fixes ## Documentation ## Data ## Maintenance","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-fixes-0-9-6","dir":"Changelog","previous_headings":"","what":"Major fixes","title":"ruODK 0.9.6","text":"Note ruODK supports one passphrase. switching multiple encrypted forms, make sense store different passphrases separate environment variables, refer environment variables explicitly function calls. updated ruODK::submission_export now export data encrypted projects non-encrypted projects. HTTP method changed GET POST encryption key ID / passphrase provided via POST body using JSON format. Encrypted forms can extracted inspected like non-encrypted forms: {r, eval=FALSE} se <- submission_export() t <- tempdir() f <- unzip(se, exdir = t) fs::dir_ls(t) fid <- get_test_fid() sub <- fs::path(t, glue::glue(\"Locations.csv\")) %>% readr::read_csv() sub %>% knitr::kable(.)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-fixes-0-9-5","dir":"Changelog","previous_headings":"","what":"Major fixes","title":"ruODK 0.9.5","text":"form_schema_ext retrieves choice lists choice filters present (#105, @mtyszler). ## Minor fixes ## Documentation ## Data ## Maintenance","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-fixes-0-9-4","dir":"Changelog","previous_headings":"","what":"Major fixes","title":"ruODK 0.9.4","text":"form_schema_ext performance enhancement (#106, thanks @mtyszler). ## Maintenance Tests use vcr cache server response (#104). Delete local cache tests/fixtures re-generate vcr cache, enjoy much faster running tests using cached server response.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-093","dir":"Changelog","previous_headings":"","what":"ruODK 0.9.3","title":"ruODK 0.9.3","text":"point release create new RStudio Server image. ## Minor fixes * Form schema now also works draft forms (#103, HT @dmenne). ## Maintenance * Automated code reviews <codefactor.io>. * GitHub Actions welcomes Ubuntu 20.04 LTS MacOS X back passing environments.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-fixes-0-9-2","dir":"Changelog","previous_headings":"","what":"Major fixes","title":"ruODK 0.9.2","text":"form_schema_ext() Shows extended schema one form, including (multi-language) labels choice lists. (#77, thanks @mtyszler PR) Development continues default branch main. ## Minor fixes form_list now handles draft forms NA hash version (#86, thanks @dmenne PR). Migrate package tests new ODK Central instance update contributing guidelines new settings. (#14) Drop Import tidyselect favour using dplyr::all_of(). calls httr::RETRY(times=) configurable via setting retries. (#94) ## Documentation Mapview popups vignette “Spatial” back upstream bugfix progress (https://github.com/r-spatial/mapview/issues/312).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-fixes-0-9-1","dir":"Changelog","previous_headings":"","what":"Major fixes","title":"ruODK 0.9.1","text":"ODK Central versions 0.7 0.9 export geotraces geoshapes via OData trailing empty coordinate. ruODK removes trailing empty coordinates GeoJSON WKT formats. (#88, HT @TimonWeitkamp bug report)","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"documentation-0-9-1","dir":"Changelog","previous_headings":"","what":"Documentation","title":"ruODK 0.9.1","text":"new vignette “Spatial” demonstrates parse spatial data native formats, sf, gives pointers next .","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-090","dir":"Changelog","previous_headings":"","what":"ruODK 0.9.0","title":"ruODK 0.9.0","text":"release passing rOpenSci peer review. Thanks rOpenSci editors reviewers @maelle, @karissawhiting @jmt2080ad, well @OdiljonQurbon, @dickoa, @arestrom @dmenne. DOI minted https://doi.org/10.5281/zenodo.3953159.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-066","dir":"Changelog","previous_headings":"","what":"ruODK 0.6.6","title":"ruODK 0.6.6","text":"version addresses ROpenSci reviewer comments @karissawhiting @jmt2080ad, contributions @dickoa, well ideas suggestions @OdiljonQurbon, @arestrom @dmenne. version supports ODK Central 0.9 providing backwards compatibility ODK Central <= 0.7.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"major-fixes-0-6-6","dir":"Changelog","previous_headings":"","what":"Major fixes","title":"ruODK 0.6.6","text":"New environment variables ODKC_(TEST_)VERSION allow ruODK toggle deprecated/removed new/added API endpoints, e.g. form_schema. (#61) Split rename WKT POINT (ODK geopoint) fields odata_submission_get(wkt=T). (#31 #7 HT @OdiljonQurbon) submission_get now accepts vector (selected) submission instance IDs (iid), similar odata_submission_get(). (#38) httr::GET() now replaced httr::RETRY(\"GET\", ...) (#48) Refactor odata_submission_parse() odata_submission_rectangle(), handle_ru_{geopoints, geotraces, geoshapes, datetimes, attachments}. (#54 #69) Maintain backwards compatibility ODK Central v7 changed spatial output geotrace geoshape (#70)","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"minor-fixes-0-6-6","dir":"Changelog","previous_headings":"","what":"Minor fixes","title":"ruODK 0.6.6","text":"Drop . <- NULL favour utils::globalVariables(\".\"). (#35) Print settings now hides passwords instructs show . (#37) ru_setup() now prints settings. (#37) parse_datetime() renamed ru_datetime() avoid naming conflict readr::parse_datetime(). (#43) Add global default verbosity. (#51 HT @arestrom) Add global default time zone. (#53 HT @arestrom) Use httr::modify_url build URLs rather glue::glue (#66) Silenced spurious messages tibble::as_tibble() called odata_submission_rectangle(). Use ru_verbose toggle useful diagnostic messages. (#79 HT @dmenne) Renamed master branch main, updated docs (HT @arestrom #81)","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"dependencies-0-6-6","dir":"Changelog","previous_headings":"","what":"Dependencies","title":"ruODK 0.6.6","text":"Moved rlist Imports, now used odata_submission_get(). (#6) Dropped rlist dependency favour tidyr/dplyr. (#85) Use development versions rlang, purrr lifecycle get latest bug fixes.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"data-0-6-6","dir":"Changelog","previous_headings":"","what":"Data","title":"ruODK 0.6.6","text":"Use canned data vignettes, can build without authentication. (#33) Update canned data (make-data.R) work CI-built pkgdown site. (#52) Remove nested list form_schema_raw generated legacy ODK Central (< 0.8) (#61) Added ODK Central < v0.7 form schema tests.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"documentation-0-6-6","dir":"Changelog","previous_headings":"","what":"Documentation","title":"ruODK 0.6.6","text":"Updated workshop companion package urODK. Rename vignettes odata-api restful-api. (#34) Warn using plain text credentials vignette setup. (#34) documentation improvements #34. Add screencast README. HT asciicast! (#45) Improve logo - turtles, questionable photoshopping. Add examples missing. (#32) Build pkgdown site via GH actions. (#52) Minor typographic changes: end every function title full stop. Broken links inconsistencies fixed contributions ODK Forum, @dickoa, @arestrom, @dmenne. Thanks first community feedback! (#76 #74 #79 #80 #81)","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"docker-0-6-6","dir":"Changelog","previous_headings":"","what":"Docker","title":"ruODK 0.6.6","text":"Added Dockerfile build RStudio Server image based rocker/geospatial ruODK dependencies installed. Build separate Dockerfile urODK launch hosted RStudio instance Binderhub. (#83)","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-066-1","dir":"Changelog","previous_headings":"","what":"ruODK 0.6.6","title":"ruODK 0.6.6","text":"big one landed: odata_submission_get() now defaults parse submissions nested lists tibble, parse dates datetimes, download link attachments. (#6)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"documentation-0-6-5","dir":"Changelog","previous_headings":"","what":"Documentation","title":"ruODK 0.6.5","text":"Use lifecycle badges functions. Add lifecycle dependencies, version bump usethis. (#29)","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"code-0-6-5","dir":"Changelog","previous_headings":"","what":"Code","title":"ruODK 0.6.5","text":"Refactor list wrangling code use map_*(.default=NA), removing internal helpers (thanks @jennybc) Use dummy imports silence R CMD check NOTES per googledrive’s example (thanks @jennybc) Drop unused internal helper functions","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"data-0-6-4","dir":"Changelog","previous_headings":"","what":"Data","title":"ruODK 0.6.4","text":"Use three new test forms make package smaller tests faster. Use main test form example data, including data two nested tables. Use main test form vignettes README. Use small form without attachments tests repeatedly exporting ZIP. Use another small form one submission two attachments tests downloading attachments. test credentials unchanged (#23)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"dependencies-0-6-3","dir":"Changelog","previous_headings":"","what":"Dependencies","title":"ruODK 0.6.3","text":"tidyr 1.0.0 ! Move tidyr dependency GitHub master CRAN version (#27) Add usethis Suggests, used setup step","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"documentation-0-6-3","dir":"Changelog","previous_headings":"","what":"Documentation","title":"ruODK 0.6.3","text":"Add David Henry’s Pentaho Kettle tutorial software review README (#28)","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"diy-for-workshops-0-6-3","dir":"Changelog","previous_headings":"","what":"DIY for workshops","title":"ruODK 0.6.3","text":"Add inaugural RMarkdown template “odata” (#26) Add binder launch button (one click start #26)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"code-0-6-2","dir":"Changelog","previous_headings":"","what":"Code","title":"ruODK 0.6.2","text":"Simplifiy ru_setup() use OData Service URL. Change functions default get_default{pid,fid,url,un,pw}(), partly moving project ID (pid) form ID (fid) kwargs. changes examples, tests, vignettes, READMEs. Reduce installed package size sharing attachment files. Add new parameter separate=FALSE attachment_get prevent separating attachment files subfolders named submission uuid (#22)","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"documentation-0-6-2","dir":"Changelog","previous_headings":"","what":"Documentation","title":"ruODK 0.6.2","text":"Add high level overview diagram README inst/joss/paper.md illustrate ruODK’s intended purpose ODK ecosystem (#19) Added link explain environment variables R startup vignette “setup”. @maelle Add comparison similar software README (#25)","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-061","dir":"Changelog","previous_headings":"","what":"ruODK 0.6.1","title":"ruODK 0.6.1","text":"ROpenSci submission review milestone, discussion. Updates documentation (#13 #15 #17) Group function docs (#18) Update contribution guidelines add account request issue template: run ruODK tests build vignettes (#15 #20) Add dedicated ru_setup() ru_settings(). Pat functions missing credentials yell loudly clearly httr errors. (#16) Drop @importFrom reduce duplication. external functions prefixed package name already. Add convenience helpers attachment_link() parse_datetime(). Use janitor::clean_names() column names home-grown helpers. Since submission_detail now metadata , add submission_get download submission data.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-060","dir":"Changelog","previous_headings":"","what":"ruODK 0.6.0","title":"ruODK 0.6.0","text":"Version bump lifecycle bump indicate ruODK ready used ODK Central 0.6.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-0609000","dir":"Changelog","previous_headings":"","what":"ruODK 0.6.0.9000","title":"ruODK 0.6.0.9000","text":"Version bump match ODK Central’s version. Updated match ODK Central’s API 0.6 (RESTful OData) (c.f.). Add commented crosslinks source code related tests convenience. Encryption endpoints (new 0.6) yet supported. Audit logs supported, read-export.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"preparation-for-ropensci-pre-submission-0-3-1","dir":"Changelog","previous_headings":"","what":"Preparation for ROpenSci pre-submission","title":"ruODK 0.3.1","text":"Check name available::available(\"ruODK\"): Name valid: ✔ Available CRAN: ✔ Available Bioconductor: ✔ Available GitHub: ✔ Rude misinterpretations: none summary: Package name seems OK. Well, ODK. OK, ruODK. Added metadata via codemetar::write_codemeta(\"ruODK\"). Cross-platform: Runs GNU/Linux (TravisCI) Windows (AppVeyor) Function naming follows object_verb. ruODK uses verb singulars (e.g. submission_list list multiple submissions), ODK Central’s API URLs use verb plurals. ruODK uses snake_case. Exception object_verb: Functions operating OData endpoints named odata_object_verb. Helper functions related API endpoints named verb_object. Code style done styler::style_package(), see section “Release” README.md. ruODK README.Rmd website generated pkgdown. ruODK documentation generated roxygen2. Test coverage 100%, use edge cases. Tests use live ODK Central instance, kept date ODK. means ruODK’s test always run latest master ODK Central. ruODK (maybe ?) use webmockr vcr. Spellchecks spelling::spell_check_package(): added technical terms function names inst/WORDLIST. Added citation section README. Added inst/joss/paper.md submission JOSS. Added examples function docs.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"todo-0-3-1","dir":"Changelog","previous_headings":"","what":"TODO","title":"ruODK 0.3.1","text":"Implement remaining missing functions (ticket).","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-030","dir":"Changelog","previous_headings":"","what":"ruODK 0.3.0","title":"ruODK 0.3.0","text":"Use tidyverse issue template Follow goodpractice Created vignette “Setup” Add AppVeyor Refactor storage path attachments contain “uuid:” (Windows compat) Started REST API: project_list, project_detail, form_list, form_detail. Naming scheme object_verb. now, functions related OData endpoint named verb_object, maybe rename odata_object_verb. Refactor URLs - build project form IDs","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-024","dir":"Changelog","previous_headings":"","what":"ruODK 0.2.4","title":"ruODK 0.2.4","text":"Cleaned logo, thanks @issa-tseng suggestions","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-023","dir":"Changelog","previous_headings":"","what":"ruODK 0.2.3","title":"ruODK 0.2.3","text":"Added new form, Flora Quadrat 0.3 inst/extdata.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-022","dir":"Changelog","previous_headings":"","what":"ruODK 0.2.2","title":"ruODK 0.2.2","text":"Added test coverage.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-021","dir":"Changelog","previous_headings":"","what":"ruODK 0.2.1","title":"ruODK 0.2.1","text":"Added various usethis goodies, test stubs, badges.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-020","dir":"Changelog","previous_headings":"","what":"ruODK 0.2.0","title":"ruODK 0.2.0","text":"Recursively unnests raw data wide format. Manual post-processing still required rename (anonymous ODK auto-named R) coordinates, handle attachments.","code":""},{"path":"https://docs.ropensci.org/ruODK/news/index.html","id":"ruodk-010","dir":"Changelog","previous_headings":"","what":"ruODK 0.1.0","title":"ruODK 0.1.0","text":"Parses metadata, submissions, handles attachments (retaining already downloaded attachments). Includes example forms .xml .odbbuild inst/extdata. Includes example data retrieved ODK Central. Includes vignette demonstrating tidying retrieved data. Handles repeating groups. Roadmap: Handle paginated submissions. Retain already downloaded submissions.","code":""}]
